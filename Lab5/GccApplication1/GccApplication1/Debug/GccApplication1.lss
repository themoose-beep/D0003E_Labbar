
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  00001ca6  00001d3a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ca6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080012e  0080012e  00001d68  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001d68  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001d98  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000200  00000000  00000000  00001dd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002b0a  00000000  00000000  00001fd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000fde  00000000  00000000  00004ae2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000014ac  00000000  00000000  00005ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000b50  00000000  00000000  00006f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000091e  00000000  00000000  00007abc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000277a  00000000  00000000  000083da  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001b0  00000000  00000000  0000ab54  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
       4:	0c 94 6e 02 	jmp	0x4dc	; 0x4dc <__vector_1>
       8:	0c 94 da 02 	jmp	0x5b4	; 0x5b4 <__vector_2>
       c:	0c 94 46 03 	jmp	0x68c	; 0x68c <__vector_3>
      10:	0c 94 b2 03 	jmp	0x764	; 0x764 <__vector_4>
      14:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__vector_5>
      18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      1c:	0c 94 06 0b 	jmp	0x160c	; 0x160c <__vector_7>
      20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
      24:	0c 94 b4 0a 	jmp	0x1568	; 0x1568 <__vector_9>
      28:	0c 94 8a 04 	jmp	0x914	; 0x914 <__vector_10>
      2c:	0c 94 f6 04 	jmp	0x9ec	; 0x9ec <__vector_11>
      30:	0c 94 62 05 	jmp	0xac4	; 0xac4 <__vector_12>
      34:	0c 94 ce 05 	jmp	0xb9c	; 0xb9c <__vector_13>
      38:	0c 94 3a 06 	jmp	0xc74	; 0xc74 <__vector_14>
      3c:	0c 94 a6 06 	jmp	0xd4c	; 0xd4c <__vector_15>
      40:	0c 94 12 07 	jmp	0xe24	; 0xe24 <__vector_16>
      44:	0c 94 7e 07 	jmp	0xefc	; 0xefc <__vector_17>
      48:	0c 94 ea 07 	jmp	0xfd4	; 0xfd4 <__vector_18>
      4c:	0c 94 56 08 	jmp	0x10ac	; 0x10ac <__vector_19>
      50:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <__vector_20>
      54:	0c 94 2e 09 	jmp	0x125c	; 0x125c <__vector_21>
      58:	0c 94 9a 09 	jmp	0x1334	; 0x1334 <__vector_22>

0000005c <__ctors_end>:
      5c:	11 24       	eor	r1, r1
      5e:	1f be       	out	0x3f, r1	; 63
      60:	cf ef       	ldi	r28, 0xFF	; 255
      62:	d4 e0       	ldi	r29, 0x04	; 4
      64:	de bf       	out	0x3e, r29	; 62
      66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
      68:	11 e0       	ldi	r17, 0x01	; 1
      6a:	a0 e0       	ldi	r26, 0x00	; 0
      6c:	b1 e0       	ldi	r27, 0x01	; 1
      6e:	e6 ea       	ldi	r30, 0xA6	; 166
      70:	fc e1       	ldi	r31, 0x1C	; 28
      72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
      74:	05 90       	lpm	r0, Z+
      76:	0d 92       	st	X+, r0
      78:	ae 32       	cpi	r26, 0x2E	; 46
      7a:	b1 07       	cpc	r27, r17
      7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
      7e:	24 e0       	ldi	r18, 0x04	; 4
      80:	ae e2       	ldi	r26, 0x2E	; 46
      82:	b1 e0       	ldi	r27, 0x01	; 1
      84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
      86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
      88:	a1 38       	cpi	r26, 0x81	; 129
      8a:	b2 07       	cpc	r27, r18
      8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
      8e:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <main>
      92:	0c 94 51 0e 	jmp	0x1ca2	; 0x1ca2 <_exit>

00000096 <__bad_interrupt>:
      96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <writeChar>:
#include "Gui.h"
#include <stdint.h>

uint16_t sccMap[] = {0x1551, 0x2080, 0x1e11, 0x1b11, 0x0b50, 0x1b41, 0x1f41, 0x0111, 0x1f51, 0x1b51, 0x0000};

void writeChar(char ch, int pos) {
      9a:	0f 93       	push	r16
      9c:	1f 93       	push	r17
      9e:	cf 93       	push	r28
      a0:	df 93       	push	r29
	uint8_t mask;
	
	uint8_t *writePos = &LCDDR0;
	
	
	if (pos > 5 || pos < 0) {
      a2:	66 30       	cpi	r22, 0x06	; 6
      a4:	71 05       	cpc	r23, r1
      a6:	08 f0       	brcs	.+2      	; 0xaa <writeChar+0x10>
      a8:	4b c0       	rjmp	.+150    	; 0x140 <writeChar+0xa6>
		return;
	}
	
	
	// Convert from char representation to integer
	uint8_t intCh = ch - '0';
      aa:	80 53       	subi	r24, 0x30	; 48
	
	if (intCh > 9 || intCh < 0) {
      ac:	8a 30       	cpi	r24, 0x0A	; 10
      ae:	08 f0       	brcs	.+2      	; 0xb2 <writeChar+0x18>
		intCh = 10;
      b0:	8a e0       	ldi	r24, 0x0A	; 10
	};
	
	// Decide which reg
	writePos += pos >> 1;
      b2:	fb 01       	movw	r30, r22
      b4:	f5 95       	asr	r31
      b6:	e7 95       	ror	r30
      b8:	e4 51       	subi	r30, 0x14	; 20
      ba:	ff 4f       	sbci	r31, 0xFF	; 255
	
	// Decide of upper or lower nibble of reg
	if (pos % 2 == 0) {
      bc:	60 ff       	sbrs	r22, 0
      be:	02 c0       	rjmp	.+4      	; 0xc4 <writeChar+0x2a>
		mask = 0x0f;
	}
	else {
		mask = 0xf0;
      c0:	50 ef       	ldi	r21, 0xF0	; 240
      c2:	01 c0       	rjmp	.+2      	; 0xc6 <writeChar+0x2c>
	// Decide which reg
	writePos += pos >> 1;
	
	// Decide of upper or lower nibble of reg
	if (pos % 2 == 0) {
		mask = 0x0f;
      c4:	5f e0       	ldi	r21, 0x0F	; 15
	}
	else {
		mask = 0xf0;
	}
	
	uint16_t sccChar = sccMap[intCh];
      c6:	a8 2f       	mov	r26, r24
      c8:	b0 e0       	ldi	r27, 0x00	; 0
      ca:	aa 0f       	add	r26, r26
      cc:	bb 1f       	adc	r27, r27
      ce:	a0 50       	subi	r26, 0x00	; 0
      d0:	bf 4f       	sbci	r27, 0xFF	; 255
      d2:	cd 91       	ld	r28, X+
      d4:	dc 91       	ld	r29, X
      d6:	61 e0       	ldi	r22, 0x01	; 1
      d8:	70 e0       	ldi	r23, 0x00	; 0
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
		
		// Reset nibble to write, if i = 0 we do not want to overwrite the middle bits
		if (i == 0) {
			*writePos = (*writePos & ~mask) | (*writePos & 0x66);
			} else {
			*writePos = *writePos & ~mask;
      de:	15 2f       	mov	r17, r21
      e0:	10 95       	com	r17
		// Get relevant nibble
		uint8_t writeCh = (sccChar >> i*4) & 0xf;
		
		// Reset nibble to write, if i = 0 we do not want to overwrite the middle bits
		if (i == 0) {
			*writePos = (*writePos & ~mask) | (*writePos & 0x66);
      e2:	01 2f       	mov	r16, r17
      e4:	06 66       	ori	r16, 0x66	; 102
      e6:	04 c0       	rjmp	.+8      	; 0xf0 <writeChar+0x56>
      e8:	14 96       	adiw	r26, 0x04	; 4
      ea:	35 96       	adiw	r30, 0x05	; 5
      ec:	6f 5f       	subi	r22, 0xFF	; 255
      ee:	7f 4f       	sbci	r23, 0xFF	; 255
	uint16_t sccChar = sccMap[intCh];
	
	// Repeat for all four nibbles
	for (int i = 0; i < 4; i++) {
		// Get relevant nibble
		uint8_t writeCh = (sccChar >> i*4) & 0xf;
      f0:	ce 01       	movw	r24, r28
      f2:	0a 2e       	mov	r0, r26
      f4:	02 c0       	rjmp	.+4      	; 0xfa <writeChar+0x60>
      f6:	96 95       	lsr	r25
      f8:	87 95       	ror	r24
      fa:	0a 94       	dec	r0
      fc:	e2 f7       	brpl	.-8      	; 0xf6 <writeChar+0x5c>
      fe:	48 2f       	mov	r20, r24
     100:	4f 70       	andi	r20, 0x0F	; 15
		
		// Reset nibble to write, if i = 0 we do not want to overwrite the middle bits
		if (i == 0) {
     102:	61 30       	cpi	r22, 0x01	; 1
     104:	71 05       	cpc	r23, r1
     106:	69 f4       	brne	.+26     	; 0x122 <writeChar+0x88>
			*writePos = (*writePos & ~mask) | (*writePos & 0x66);
     108:	80 81       	ld	r24, Z
     10a:	90 2f       	mov	r25, r16
     10c:	98 23       	and	r25, r24
			*writePos = *writePos & ~mask;
		}
		
		
		// Duplicate nibble to upper and mask to write to upper or lower nibble of reg
		*writePos = ((writeCh | (writeCh << 4)) & mask) | *writePos;
     10e:	80 e1       	ldi	r24, 0x10	; 16
     110:	48 9f       	mul	r20, r24
     112:	90 01       	movw	r18, r0
     114:	11 24       	eor	r1, r1
     116:	84 2f       	mov	r24, r20
     118:	82 2b       	or	r24, r18
     11a:	85 23       	and	r24, r21
     11c:	89 2b       	or	r24, r25
     11e:	80 83       	st	Z, r24
     120:	e3 cf       	rjmp	.-58     	; 0xe8 <writeChar+0x4e>
		
		// Reset nibble to write, if i = 0 we do not want to overwrite the middle bits
		if (i == 0) {
			*writePos = (*writePos & ~mask) | (*writePos & 0x66);
			} else {
			*writePos = *writePos & ~mask;
     122:	80 81       	ld	r24, Z
     124:	91 2f       	mov	r25, r17
     126:	98 23       	and	r25, r24
		}
		
		
		// Duplicate nibble to upper and mask to write to upper or lower nibble of reg
		*writePos = ((writeCh | (writeCh << 4)) & mask) | *writePos;
     128:	80 e1       	ldi	r24, 0x10	; 16
     12a:	48 9f       	mul	r20, r24
     12c:	90 01       	movw	r18, r0
     12e:	11 24       	eor	r1, r1
     130:	84 2f       	mov	r24, r20
     132:	82 2b       	or	r24, r18
     134:	85 23       	and	r24, r21
     136:	89 2b       	or	r24, r25
     138:	80 83       	st	Z, r24
	}
	
	uint16_t sccChar = sccMap[intCh];
	
	// Repeat for all four nibbles
	for (int i = 0; i < 4; i++) {
     13a:	64 30       	cpi	r22, 0x04	; 4
     13c:	71 05       	cpc	r23, r1
     13e:	a4 f2       	brlt	.-88     	; 0xe8 <writeChar+0x4e>

	}
	return;
	
	
}
     140:	df 91       	pop	r29
     142:	cf 91       	pop	r28
     144:	1f 91       	pop	r17
     146:	0f 91       	pop	r16
     148:	08 95       	ret

0000014a <printAt>:

void printAt(Gui *self, uint8_t num) {
     14a:	0f 93       	push	r16
     14c:	1f 93       	push	r17
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	d6 2f       	mov	r29, r22
    int pp = self->pos;
     154:	fc 01       	movw	r30, r24
     156:	04 81       	ldd	r16, Z+4	; 0x04
     158:	10 e0       	ldi	r17, 0x00	; 0
    writeChar( (num % 100) / 10 + '0', pp);
     15a:	89 e2       	ldi	r24, 0x29	; 41
     15c:	68 9f       	mul	r22, r24
     15e:	81 2d       	mov	r24, r1
     160:	11 24       	eor	r1, r1
     162:	82 95       	swap	r24
     164:	8f 70       	andi	r24, 0x0F	; 15
     166:	26 2f       	mov	r18, r22
     168:	f4 e6       	ldi	r31, 0x64	; 100
     16a:	8f 9f       	mul	r24, r31
     16c:	20 19       	sub	r18, r0
     16e:	11 24       	eor	r1, r1
     170:	cd ec       	ldi	r28, 0xCD	; 205
     172:	2c 9f       	mul	r18, r28
     174:	81 2d       	mov	r24, r1
     176:	11 24       	eor	r1, r1
     178:	86 95       	lsr	r24
     17a:	86 95       	lsr	r24
     17c:	86 95       	lsr	r24
     17e:	b8 01       	movw	r22, r16
     180:	80 5d       	subi	r24, 0xD0	; 208
     182:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
    pp++;
    writeChar( num % 10 + '0', pp);
     186:	b8 01       	movw	r22, r16
     188:	6f 5f       	subi	r22, 0xFF	; 255
     18a:	7f 4f       	sbci	r23, 0xFF	; 255
     18c:	dc 9f       	mul	r29, r28
     18e:	c1 2d       	mov	r28, r1
     190:	11 24       	eor	r1, r1
     192:	c6 95       	lsr	r28
     194:	c6 95       	lsr	r28
     196:	c6 95       	lsr	r28
     198:	cc 0f       	add	r28, r28
     19a:	8c 2f       	mov	r24, r28
     19c:	88 0f       	add	r24, r24
     19e:	88 0f       	add	r24, r24
     1a0:	c8 0f       	add	r28, r24
     1a2:	8d 2f       	mov	r24, r29
     1a4:	8c 1b       	sub	r24, r28
     1a6:	80 5d       	subi	r24, 0xD0	; 208
     1a8:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar>
}
     1ac:	df 91       	pop	r29
     1ae:	cf 91       	pop	r28
     1b0:	1f 91       	pop	r17
     1b2:	0f 91       	pop	r16
     1b4:	08 95       	ret

000001b6 <switchActive>:

void switchActive(Gui *self, uint8_t status) {

	// Set active signifier in gui to status

	if (self->pos == 0) {
     1b6:	fc 01       	movw	r30, r24
     1b8:	84 81       	ldd	r24, Z+4	; 0x04
     1ba:	81 11       	cpse	r24, r1
     1bc:	08 c0       	rjmp	.+16     	; 0x1ce <switchActive+0x18>
		LCDDR0 = (LCDDR0 & ~(0x1 << 1)) | (status << 1);
     1be:	ec ee       	ldi	r30, 0xEC	; 236
     1c0:	f0 e0       	ldi	r31, 0x00	; 0
     1c2:	80 81       	ld	r24, Z
     1c4:	8d 7f       	andi	r24, 0xFD	; 253
     1c6:	66 0f       	add	r22, r22
     1c8:	68 2b       	or	r22, r24
     1ca:	60 83       	st	Z, r22
     1cc:	08 95       	ret
	}
	else if (self->pos == 4) {
     1ce:	84 30       	cpi	r24, 0x04	; 4
     1d0:	51 f4       	brne	.+20     	; 0x1e6 <switchActive+0x30>
		LCDDR1 = (LCDDR1 & ~(0x1 << 6)) | (status << 6);
     1d2:	ed ee       	ldi	r30, 0xED	; 237
     1d4:	f0 e0       	ldi	r31, 0x00	; 0
     1d6:	80 81       	ld	r24, Z
     1d8:	8f 7b       	andi	r24, 0xBF	; 191
     1da:	90 e4       	ldi	r25, 0x40	; 64
     1dc:	69 9f       	mul	r22, r25
     1de:	b0 01       	movw	r22, r0
     1e0:	11 24       	eor	r1, r1
     1e2:	68 2b       	or	r22, r24
     1e4:	60 83       	st	Z, r22
     1e6:	08 95       	ret

000001e8 <main>:
#define FOSC 8000000UL // Clock Speed
#define BAUD 9600
#define MYUBRR FOSC/16/BAUD-1

int main(void)
{
     1e8:	cf 93       	push	r28
     1ea:	df 93       	push	r29
     1ec:	cd b7       	in	r28, 0x3d	; 61
     1ee:	de b7       	in	r29, 0x3e	; 62
     1f0:	a9 97       	sbiw	r28, 0x29	; 41
     1f2:	0f b6       	in	r0, 0x3f	; 63
     1f4:	f8 94       	cli
     1f6:	de bf       	out	0x3e, r29	; 62
     1f8:	0f be       	out	0x3f, r0	; 63
     1fa:	cd bf       	out	0x3d, r28	; 61
    Utility utility = initUtility();
     1fc:	1a 82       	std	Y+2, r1	; 0x02
     1fe:	19 82       	std	Y+1, r1	; 0x01
     200:	1c 82       	std	Y+4, r1	; 0x04
     202:	1b 82       	std	Y+3, r1	; 0x03
    initUtil(&utility, MYUBRR);
     204:	63 e3       	ldi	r22, 0x33	; 51
     206:	70 e0       	ldi	r23, 0x00	; 0
     208:	ce 01       	movw	r24, r28
     20a:	01 96       	adiw	r24, 0x01	; 1
     20c:	0e 94 e3 0d 	call	0x1bc6	; 0x1bc6 <initUtil>
    Gui gui[] = {initGui(0), initGui(2), initGui(4)};
     210:	8f e0       	ldi	r24, 0x0F	; 15
     212:	ee e1       	ldi	r30, 0x1E	; 30
     214:	f1 e0       	ldi	r31, 0x01	; 1
     216:	de 01       	movw	r26, r28
     218:	15 96       	adiw	r26, 0x05	; 5
     21a:	01 90       	ld	r0, Z+
     21c:	0d 92       	st	X+, r0
     21e:	8a 95       	dec	r24
     220:	e1 f7       	brne	.-8      	; 0x21a <__EEPROM_REGION_LENGTH__+0x1a>
    State state = initState();
     222:	fe 01       	movw	r30, r28
     224:	74 96       	adiw	r30, 0x14	; 20
     226:	86 e1       	ldi	r24, 0x16	; 22
     228:	df 01       	movw	r26, r30
     22a:	1d 92       	st	X+, r1
     22c:	8a 95       	dec	r24
     22e:	e9 f7       	brne	.-6      	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
    state.gui[0] = &gui[0];
     230:	ce 01       	movw	r24, r28
     232:	05 96       	adiw	r24, 0x05	; 5
     234:	9d a3       	std	Y+37, r25	; 0x25
     236:	8c a3       	std	Y+36, r24	; 0x24
    state.gui[1] = &gui[1];
     238:	05 96       	adiw	r24, 0x05	; 5
     23a:	9f a3       	std	Y+39, r25	; 0x27
     23c:	8e a3       	std	Y+38, r24	; 0x26
    state.gui[2] = &gui[2];
     23e:	05 96       	adiw	r24, 0x05	; 5
     240:	99 a7       	std	Y+41, r25	; 0x29
     242:	88 a7       	std	Y+40, r24	; 0x28
    while (1) 
    {
     TINYTIMBER(&state, initialize, NULL);   
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	6b e2       	ldi	r22, 0x2B	; 43
     24a:	71 e0       	ldi	r23, 0x01	; 1
     24c:	ce 01       	movw	r24, r28
     24e:	44 96       	adiw	r24, 0x14	; 20
     250:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <tinytimber>
     254:	f7 cf       	rjmp	.-18     	; 0x244 <__EEPROM_REGION_LENGTH__+0x44>

00000256 <initialize>:

// 1 north
// -1 south


void initialize(State *self) {
     256:	af 92       	push	r10
     258:	bf 92       	push	r11
     25a:	cf 92       	push	r12
     25c:	df 92       	push	r13
     25e:	ef 92       	push	r14
     260:	ff 92       	push	r15
     262:	0f 93       	push	r16
     264:	1f 93       	push	r17
     266:	cf 93       	push	r28
     268:	df 93       	push	r29
     26a:	cd b7       	in	r28, 0x3d	; 61
     26c:	de b7       	in	r29, 0x3e	; 62
     26e:	2a 97       	sbiw	r28, 0x0a	; 10
     270:	0f b6       	in	r0, 0x3f	; 63
     272:	f8 94       	cli
     274:	de bf       	out	0x3e, r29	; 62
     276:	0f be       	out	0x3f, r0	; 63
     278:	cd bf       	out	0x3d, r28	; 61
     27a:	5c 01       	movw	r10, r24
	TrafficLight NL = initTrafficLight(false);
     27c:	1a 82       	std	Y+2, r1	; 0x02
     27e:	19 82       	std	Y+1, r1	; 0x01
     280:	1c 82       	std	Y+4, r1	; 0x04
     282:	1b 82       	std	Y+3, r1	; 0x03
     284:	1d 82       	std	Y+5, r1	; 0x05
	TrafficLight SL = initTrafficLight(false);
     286:	1f 82       	std	Y+7, r1	; 0x07
     288:	1e 82       	std	Y+6, r1	; 0x06
     28a:	19 86       	std	Y+9, r1	; 0x09
     28c:	18 86       	std	Y+8, r1	; 0x08
     28e:	1a 86       	std	Y+10, r1	; 0x0a
	self->northLight = &NL;
     290:	ce 01       	movw	r24, r28
     292:	01 96       	adiw	r24, 0x01	; 1
     294:	f5 01       	movw	r30, r10
     296:	93 87       	std	Z+11, r25	; 0x0b
     298:	82 87       	std	Z+10, r24	; 0x0a
	self->southLight = &SL;
     29a:	05 96       	adiw	r24, 0x05	; 5
     29c:	91 87       	std	Z+9, r25	; 0x09
     29e:	80 87       	std	Z+8, r24	; 0x08
    ASYNC(self->gui[0], printAt, 0);
     2a0:	00 89       	ldd	r16, Z+16	; 0x10
     2a2:	11 89       	ldd	r17, Z+17	; 0x11
     2a4:	c1 2c       	mov	r12, r1
     2a6:	d1 2c       	mov	r13, r1
     2a8:	0f 2e       	mov	r0, r31
     2aa:	f5 ea       	ldi	r31, 0xA5	; 165
     2ac:	ef 2e       	mov	r14, r31
     2ae:	f0 e0       	ldi	r31, 0x00	; 0
     2b0:	ff 2e       	mov	r15, r31
     2b2:	f0 2d       	mov	r31, r0
     2b4:	20 e0       	ldi	r18, 0x00	; 0
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	a9 01       	movw	r20, r18
     2ba:	60 e0       	ldi	r22, 0x00	; 0
     2bc:	70 e0       	ldi	r23, 0x00	; 0
     2be:	cb 01       	movw	r24, r22
     2c0:	0e 94 bb 0b 	call	0x1776	; 0x1776 <async>
    ASYNC(self->gui[1], printAt, 0);
     2c4:	f5 01       	movw	r30, r10
     2c6:	02 89       	ldd	r16, Z+18	; 0x12
     2c8:	13 89       	ldd	r17, Z+19	; 0x13
     2ca:	20 e0       	ldi	r18, 0x00	; 0
     2cc:	30 e0       	ldi	r19, 0x00	; 0
     2ce:	a9 01       	movw	r20, r18
     2d0:	60 e0       	ldi	r22, 0x00	; 0
     2d2:	70 e0       	ldi	r23, 0x00	; 0
     2d4:	cb 01       	movw	r24, r22
     2d6:	0e 94 bb 0b 	call	0x1776	; 0x1776 <async>
    ASYNC(self->gui[2], printAt, 0);
     2da:	f5 01       	movw	r30, r10
     2dc:	04 89       	ldd	r16, Z+20	; 0x14
     2de:	15 89       	ldd	r17, Z+21	; 0x15
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	a9 01       	movw	r20, r18
     2e6:	60 e0       	ldi	r22, 0x00	; 0
     2e8:	70 e0       	ldi	r23, 0x00	; 0
     2ea:	cb 01       	movw	r24, r22
     2ec:	0e 94 bb 0b 	call	0x1776	; 0x1776 <async>
    ASYNC(self->gui[0], switchActive, 1);
     2f0:	f5 01       	movw	r30, r10
     2f2:	00 89       	ldd	r16, Z+16	; 0x10
     2f4:	11 89       	ldd	r17, Z+17	; 0x11
     2f6:	cc 24       	eor	r12, r12
     2f8:	c3 94       	inc	r12
     2fa:	d1 2c       	mov	r13, r1
     2fc:	0f 2e       	mov	r0, r31
     2fe:	fb ed       	ldi	r31, 0xDB	; 219
     300:	ef 2e       	mov	r14, r31
     302:	f0 e0       	ldi	r31, 0x00	; 0
     304:	ff 2e       	mov	r15, r31
     306:	f0 2d       	mov	r31, r0
     308:	20 e0       	ldi	r18, 0x00	; 0
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	a9 01       	movw	r20, r18
     30e:	60 e0       	ldi	r22, 0x00	; 0
     310:	70 e0       	ldi	r23, 0x00	; 0
     312:	cb 01       	movw	r24, r22
     314:	0e 94 bb 0b 	call	0x1776	; 0x1776 <async>
	ASYNC(self->gui[2], switchActive, 1);
     318:	f5 01       	movw	r30, r10
     31a:	04 89       	ldd	r16, Z+20	; 0x14
     31c:	15 89       	ldd	r17, Z+21	; 0x15
     31e:	20 e0       	ldi	r18, 0x00	; 0
     320:	30 e0       	ldi	r19, 0x00	; 0
     322:	a9 01       	movw	r20, r18
     324:	60 e0       	ldi	r22, 0x00	; 0
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	cb 01       	movw	r24, r22
     32a:	0e 94 bb 0b 	call	0x1776	; 0x1776 <async>
	
}
     32e:	2a 96       	adiw	r28, 0x0a	; 10
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	f8 94       	cli
     334:	de bf       	out	0x3e, r29	; 62
     336:	0f be       	out	0x3f, r0	; 63
     338:	cd bf       	out	0x3d, r28	; 61
     33a:	df 91       	pop	r29
     33c:	cf 91       	pop	r28
     33e:	1f 91       	pop	r17
     340:	0f 91       	pop	r16
     342:	ff 90       	pop	r15
     344:	ef 90       	pop	r14
     346:	df 90       	pop	r13
     348:	cf 90       	pop	r12
     34a:	bf 90       	pop	r11
     34c:	af 90       	pop	r10
     34e:	08 95       	ret

00000350 <initialize>:
        char status;
        DISABLE(status);
        otable[i] = obj;
        mtable[i] = m;
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
        ENABLE(status);
     350:	cf 93       	push	r28
     352:	df 93       	push	r29
     354:	00 d0       	rcall	.+0      	; 0x356 <initialize+0x6>
     356:	00 d0       	rcall	.+0      	; 0x358 <initialize+0x8>
     358:	cd b7       	in	r28, 0x3d	; 61
     35a:	de b7       	in	r29, 0x3e	; 62
     35c:	81 e2       	ldi	r24, 0x21	; 33
     35e:	92 e0       	ldi	r25, 0x02	; 2
     360:	21 e0       	ldi	r18, 0x01	; 1
     362:	33 e0       	ldi	r19, 0x03	; 3
     364:	fc 01       	movw	r30, r24
     366:	70 97       	sbiw	r30, 0x10	; 16
     368:	91 83       	std	Z+1, r25	; 0x01
     36a:	80 83       	st	Z, r24
     36c:	40 96       	adiw	r24, 0x10	; 16
     36e:	82 17       	cp	r24, r18
     370:	93 07       	cpc	r25, r19
     372:	c1 f7       	brne	.-16     	; 0x364 <initialize+0x14>
     374:	10 92 f2 02 	sts	0x02F2, r1	; 0x8002f2 <messages+0xe1>
     378:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <messages+0xe0>
     37c:	ec e5       	ldi	r30, 0x5C	; 92
     37e:	f1 e0       	ldi	r31, 0x01	; 1
     380:	89 e7       	ldi	r24, 0x79	; 121
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	91 83       	std	Z+1, r25	; 0x01
     386:	80 83       	st	Z, r24
     388:	86 e9       	ldi	r24, 0x96	; 150
     38a:	91 e0       	ldi	r25, 0x01	; 1
     38c:	96 8f       	std	Z+30, r25	; 0x1e
     38e:	85 8f       	std	Z+29, r24	; 0x1d
     390:	a3 eb       	ldi	r26, 0xB3	; 179
     392:	b1 e0       	ldi	r27, 0x01	; 1
     394:	b3 af       	std	Z+59, r27	; 0x3b
     396:	a2 af       	std	Z+58, r26	; 0x3a
     398:	1d 92       	st	X+, r1
     39a:	1c 92       	st	X, r1
     39c:	fa 83       	std	Y+2, r31	; 0x02
     39e:	e9 83       	std	Y+1, r30	; 0x01
     3a0:	ed e5       	ldi	r30, 0x5D	; 93
     3a2:	f3 e0       	ldi	r31, 0x03	; 3
     3a4:	fc 83       	std	Y+4, r31	; 0x04
     3a6:	eb 83       	std	Y+3, r30	; 0x03
     3a8:	89 81       	ldd	r24, Y+1	; 0x01
     3aa:	9a 81       	ldd	r25, Y+2	; 0x02
     3ac:	06 96       	adiw	r24, 0x06	; 6
     3ae:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <setjmp>
     3b2:	8b 81       	ldd	r24, Y+3	; 0x03
     3b4:	9c 81       	ldd	r25, Y+4	; 0x04
     3b6:	e9 81       	ldd	r30, Y+1	; 0x01
     3b8:	fa 81       	ldd	r31, Y+2	; 0x02
     3ba:	97 8b       	std	Z+23, r25	; 0x17
     3bc:	86 8b       	std	Z+22, r24	; 0x16
     3be:	91 8f       	std	Z+25, r25	; 0x19
     3c0:	80 8f       	std	Z+24, r24	; 0x18
     3c2:	89 e5       	ldi	r24, 0x59	; 89
     3c4:	9d e0       	ldi	r25, 0x0D	; 13
     3c6:	94 8f       	std	Z+28, r25	; 0x1c
     3c8:	83 8f       	std	Z+27, r24	; 0x1b
     3ca:	15 82       	std	Z+5, r1	; 0x05
     3cc:	14 82       	std	Z+4, r1	; 0x04
     3ce:	7d 96       	adiw	r30, 0x1d	; 29
     3d0:	fa 83       	std	Y+2, r31	; 0x02
     3d2:	e9 83       	std	Y+1, r30	; 0x01
     3d4:	eb 81       	ldd	r30, Y+3	; 0x03
     3d6:	fc 81       	ldd	r31, Y+4	; 0x04
     3d8:	e0 5a       	subi	r30, 0xA0	; 160
     3da:	ff 4f       	sbci	r31, 0xFF	; 255
     3dc:	fc 83       	std	Y+4, r31	; 0x04
     3de:	eb 83       	std	Y+3, r30	; 0x03
     3e0:	89 81       	ldd	r24, Y+1	; 0x01
     3e2:	9a 81       	ldd	r25, Y+2	; 0x02
     3e4:	80 5d       	subi	r24, 0xD0	; 208
     3e6:	91 40       	sbci	r25, 0x01	; 1
     3e8:	f9 f6       	brne	.-66     	; 0x3a8 <initialize+0x58>
     3ea:	e4 ef       	ldi	r30, 0xF4	; 244
     3ec:	f1 e0       	ldi	r31, 0x01	; 1
     3ee:	11 82       	std	Z+1, r1	; 0x01
     3f0:	10 82       	st	Z, r1
     3f2:	15 82       	std	Z+5, r1	; 0x05
     3f4:	14 82       	std	Z+4, r1	; 0x04
     3f6:	13 82       	std	Z+3, r1	; 0x03
     3f8:	12 82       	std	Z+2, r1	; 0x02
     3fa:	e1 e6       	ldi	r30, 0x61	; 97
     3fc:	f0 e0       	ldi	r31, 0x00	; 0
     3fe:	80 e8       	ldi	r24, 0x80	; 128
     400:	80 83       	st	Z, r24
     402:	10 82       	st	Z, r1
     404:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     408:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     40c:	84 e0       	ldi	r24, 0x04	; 4
     40e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     412:	81 e0       	ldi	r24, 0x01	; 1
     414:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	0f 90       	pop	r0
     41e:	0f 90       	pop	r0
     420:	df 91       	pop	r29
     422:	cf 91       	pop	r28
     424:	08 95       	ret

00000426 <dispatch>:
     426:	cf 93       	push	r28
     428:	df 93       	push	r29
     42a:	00 d0       	rcall	.+0      	; 0x42c <dispatch+0x6>
     42c:	cd b7       	in	r28, 0x3d	; 61
     42e:	de b7       	in	r29, 0x3e	; 62
     430:	9a 83       	std	Y+2, r25	; 0x02
     432:	89 83       	std	Y+1, r24	; 0x01
     434:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <current>
     438:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <current+0x1>
     43c:	06 96       	adiw	r24, 0x06	; 6
     43e:	0e 94 10 0e 	call	0x1c20	; 0x1c20 <setjmp>
     442:	89 2b       	or	r24, r25
     444:	59 f4       	brne	.+22     	; 0x45c <dispatch+0x36>
     446:	89 81       	ldd	r24, Y+1	; 0x01
     448:	9a 81       	ldd	r25, Y+2	; 0x02
     44a:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <current+0x1>
     44e:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <current>
     452:	61 e0       	ldi	r22, 0x01	; 1
     454:	70 e0       	ldi	r23, 0x00	; 0
     456:	06 96       	adiw	r24, 0x06	; 6
     458:	0e 94 30 0e 	call	0x1c60	; 0x1c60 <longjmp>
     45c:	0f 90       	pop	r0
     45e:	0f 90       	pop	r0
     460:	df 91       	pop	r29
     462:	cf 91       	pop	r28
     464:	08 95       	ret

00000466 <schedule>:
     466:	0f 93       	push	r16
     468:	1f 93       	push	r17
     46a:	cf 93       	push	r28
     46c:	df 93       	push	r29
     46e:	e0 91 36 01 	lds	r30, 0x0136	; 0x800136 <msgQ>
     472:	f0 91 37 01 	lds	r31, 0x0137	; 0x800137 <msgQ+0x1>
     476:	30 97       	sbiw	r30, 0x00	; 0
     478:	61 f1       	breq	.+88     	; 0x4d2 <schedule+0x6c>
     47a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <threadPool>
     47e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <threadPool+0x1>
     482:	00 97       	sbiw	r24, 0x00	; 0
     484:	31 f1       	breq	.+76     	; 0x4d2 <schedule+0x6c>
     486:	c0 91 18 01 	lds	r28, 0x0118	; 0x800118 <activeStack>
     48a:	d0 91 19 01 	lds	r29, 0x0119	; 0x800119 <activeStack+0x1>
     48e:	aa 81       	ldd	r26, Y+2	; 0x02
     490:	bb 81       	ldd	r27, Y+3	; 0x03
     492:	10 97       	sbiw	r26, 0x00	; 0
     494:	79 f0       	breq	.+30     	; 0x4b4 <schedule+0x4e>
     496:	46 81       	ldd	r20, Z+6	; 0x06
     498:	57 81       	ldd	r21, Z+7	; 0x07
     49a:	60 85       	ldd	r22, Z+8	; 0x08
     49c:	71 85       	ldd	r23, Z+9	; 0x09
     49e:	16 96       	adiw	r26, 0x06	; 6
     4a0:	0d 91       	ld	r16, X+
     4a2:	1d 91       	ld	r17, X+
     4a4:	2d 91       	ld	r18, X+
     4a6:	3c 91       	ld	r19, X
     4a8:	19 97       	sbiw	r26, 0x09	; 9
     4aa:	40 1b       	sub	r20, r16
     4ac:	51 0b       	sbc	r21, r17
     4ae:	62 0b       	sbc	r22, r18
     4b0:	73 0b       	sbc	r23, r19
     4b2:	7a f4       	brpl	.+30     	; 0x4d2 <schedule+0x6c>
     4b4:	fc 01       	movw	r30, r24
     4b6:	20 81       	ld	r18, Z
     4b8:	31 81       	ldd	r19, Z+1	; 0x01
     4ba:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <threadPool+0x1>
     4be:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <threadPool>
     4c2:	d1 83       	std	Z+1, r29	; 0x01
     4c4:	c0 83       	st	Z, r28
     4c6:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <activeStack+0x1>
     4ca:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <activeStack>
     4ce:	0e 94 13 02 	call	0x426	; 0x426 <dispatch>
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	08 95       	ret

000004dc <__vector_1>:
     4dc:	1f 92       	push	r1
     4de:	0f 92       	push	r0
     4e0:	0f b6       	in	r0, 0x3f	; 63
     4e2:	0f 92       	push	r0
     4e4:	11 24       	eor	r1, r1
     4e6:	2f 93       	push	r18
     4e8:	3f 93       	push	r19
     4ea:	4f 93       	push	r20
     4ec:	5f 93       	push	r21
     4ee:	6f 93       	push	r22
     4f0:	7f 93       	push	r23
     4f2:	8f 93       	push	r24
     4f4:	9f 93       	push	r25
     4f6:	af 93       	push	r26
     4f8:	bf 93       	push	r27
     4fa:	ef 93       	push	r30
     4fc:	ff 93       	push	r31
     4fe:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     502:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     506:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     50a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     50e:	c9 01       	movw	r24, r18
     510:	03 2e       	mov	r0, r19
     512:	00 0c       	add	r0, r0
     514:	aa 0b       	sbc	r26, r26
     516:	bb 0b       	sbc	r27, r27
     518:	dc 01       	movw	r26, r24
     51a:	99 27       	eor	r25, r25
     51c:	88 27       	eor	r24, r24
     51e:	60 e0       	ldi	r22, 0x00	; 0
     520:	70 e0       	ldi	r23, 0x00	; 0
     522:	84 2b       	or	r24, r20
     524:	95 2b       	or	r25, r21
     526:	a6 2b       	or	r26, r22
     528:	b7 2b       	or	r27, r23
     52a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     52e:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     532:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     536:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     53a:	b0 9b       	sbis	0x16, 0	; 22
     53c:	1b c0       	rjmp	.+54     	; 0x574 <__stack+0x75>
     53e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     542:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     546:	c9 01       	movw	r24, r18
     548:	01 96       	adiw	r24, 0x01	; 1
     54a:	09 2e       	mov	r0, r25
     54c:	00 0c       	add	r0, r0
     54e:	aa 0b       	sbc	r26, r26
     550:	bb 0b       	sbc	r27, r27
     552:	dc 01       	movw	r26, r24
     554:	99 27       	eor	r25, r25
     556:	88 27       	eor	r24, r24
     558:	60 e0       	ldi	r22, 0x00	; 0
     55a:	70 e0       	ldi	r23, 0x00	; 0
     55c:	84 2b       	or	r24, r20
     55e:	95 2b       	or	r25, r21
     560:	a6 2b       	or	r26, r22
     562:	b7 2b       	or	r27, r23
     564:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     568:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     56c:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     570:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     574:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable>
     578:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x1>
     57c:	30 97       	sbiw	r30, 0x00	; 0
     57e:	39 f0       	breq	.+14     	; 0x58e <__stack+0x8f>
     580:	60 e0       	ldi	r22, 0x00	; 0
     582:	70 e0       	ldi	r23, 0x00	; 0
     584:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable>
     588:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x1>
     58c:	09 95       	icall
     58e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     592:	ff 91       	pop	r31
     594:	ef 91       	pop	r30
     596:	bf 91       	pop	r27
     598:	af 91       	pop	r26
     59a:	9f 91       	pop	r25
     59c:	8f 91       	pop	r24
     59e:	7f 91       	pop	r23
     5a0:	6f 91       	pop	r22
     5a2:	5f 91       	pop	r21
     5a4:	4f 91       	pop	r20
     5a6:	3f 91       	pop	r19
     5a8:	2f 91       	pop	r18
     5aa:	0f 90       	pop	r0
     5ac:	0f be       	out	0x3f, r0	; 63
     5ae:	0f 90       	pop	r0
     5b0:	1f 90       	pop	r1
     5b2:	18 95       	reti

000005b4 <__vector_2>:
     5b4:	1f 92       	push	r1
     5b6:	0f 92       	push	r0
     5b8:	0f b6       	in	r0, 0x3f	; 63
     5ba:	0f 92       	push	r0
     5bc:	11 24       	eor	r1, r1
     5be:	2f 93       	push	r18
     5c0:	3f 93       	push	r19
     5c2:	4f 93       	push	r20
     5c4:	5f 93       	push	r21
     5c6:	6f 93       	push	r22
     5c8:	7f 93       	push	r23
     5ca:	8f 93       	push	r24
     5cc:	9f 93       	push	r25
     5ce:	af 93       	push	r26
     5d0:	bf 93       	push	r27
     5d2:	ef 93       	push	r30
     5d4:	ff 93       	push	r31
     5d6:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     5da:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     5de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     5e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     5e6:	c9 01       	movw	r24, r18
     5e8:	03 2e       	mov	r0, r19
     5ea:	00 0c       	add	r0, r0
     5ec:	aa 0b       	sbc	r26, r26
     5ee:	bb 0b       	sbc	r27, r27
     5f0:	dc 01       	movw	r26, r24
     5f2:	99 27       	eor	r25, r25
     5f4:	88 27       	eor	r24, r24
     5f6:	60 e0       	ldi	r22, 0x00	; 0
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	84 2b       	or	r24, r20
     5fc:	95 2b       	or	r25, r21
     5fe:	a6 2b       	or	r26, r22
     600:	b7 2b       	or	r27, r23
     602:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     606:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     60a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     60e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     612:	b0 9b       	sbis	0x16, 0	; 22
     614:	1b c0       	rjmp	.+54     	; 0x64c <__vector_2+0x98>
     616:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     61a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     61e:	c9 01       	movw	r24, r18
     620:	01 96       	adiw	r24, 0x01	; 1
     622:	09 2e       	mov	r0, r25
     624:	00 0c       	add	r0, r0
     626:	aa 0b       	sbc	r26, r26
     628:	bb 0b       	sbc	r27, r27
     62a:	dc 01       	movw	r26, r24
     62c:	99 27       	eor	r25, r25
     62e:	88 27       	eor	r24, r24
     630:	60 e0       	ldi	r22, 0x00	; 0
     632:	70 e0       	ldi	r23, 0x00	; 0
     634:	84 2b       	or	r24, r20
     636:	95 2b       	or	r25, r21
     638:	a6 2b       	or	r26, r22
     63a:	b7 2b       	or	r27, r23
     63c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     640:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     644:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     648:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     64c:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x2>
     650:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x3>
     654:	30 97       	sbiw	r30, 0x00	; 0
     656:	39 f0       	breq	.+14     	; 0x666 <__vector_2+0xb2>
     658:	61 e0       	ldi	r22, 0x01	; 1
     65a:	70 e0       	ldi	r23, 0x00	; 0
     65c:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x2>
     660:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x3>
     664:	09 95       	icall
     666:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     66a:	ff 91       	pop	r31
     66c:	ef 91       	pop	r30
     66e:	bf 91       	pop	r27
     670:	af 91       	pop	r26
     672:	9f 91       	pop	r25
     674:	8f 91       	pop	r24
     676:	7f 91       	pop	r23
     678:	6f 91       	pop	r22
     67a:	5f 91       	pop	r21
     67c:	4f 91       	pop	r20
     67e:	3f 91       	pop	r19
     680:	2f 91       	pop	r18
     682:	0f 90       	pop	r0
     684:	0f be       	out	0x3f, r0	; 63
     686:	0f 90       	pop	r0
     688:	1f 90       	pop	r1
     68a:	18 95       	reti

0000068c <__vector_3>:
     68c:	1f 92       	push	r1
     68e:	0f 92       	push	r0
     690:	0f b6       	in	r0, 0x3f	; 63
     692:	0f 92       	push	r0
     694:	11 24       	eor	r1, r1
     696:	2f 93       	push	r18
     698:	3f 93       	push	r19
     69a:	4f 93       	push	r20
     69c:	5f 93       	push	r21
     69e:	6f 93       	push	r22
     6a0:	7f 93       	push	r23
     6a2:	8f 93       	push	r24
     6a4:	9f 93       	push	r25
     6a6:	af 93       	push	r26
     6a8:	bf 93       	push	r27
     6aa:	ef 93       	push	r30
     6ac:	ff 93       	push	r31
     6ae:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     6b2:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     6b6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6ba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6be:	c9 01       	movw	r24, r18
     6c0:	03 2e       	mov	r0, r19
     6c2:	00 0c       	add	r0, r0
     6c4:	aa 0b       	sbc	r26, r26
     6c6:	bb 0b       	sbc	r27, r27
     6c8:	dc 01       	movw	r26, r24
     6ca:	99 27       	eor	r25, r25
     6cc:	88 27       	eor	r24, r24
     6ce:	60 e0       	ldi	r22, 0x00	; 0
     6d0:	70 e0       	ldi	r23, 0x00	; 0
     6d2:	84 2b       	or	r24, r20
     6d4:	95 2b       	or	r25, r21
     6d6:	a6 2b       	or	r26, r22
     6d8:	b7 2b       	or	r27, r23
     6da:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     6de:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     6e2:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     6e6:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     6ea:	b0 9b       	sbis	0x16, 0	; 22
     6ec:	1b c0       	rjmp	.+54     	; 0x724 <__vector_3+0x98>
     6ee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6f2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6f6:	c9 01       	movw	r24, r18
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	09 2e       	mov	r0, r25
     6fc:	00 0c       	add	r0, r0
     6fe:	aa 0b       	sbc	r26, r26
     700:	bb 0b       	sbc	r27, r27
     702:	dc 01       	movw	r26, r24
     704:	99 27       	eor	r25, r25
     706:	88 27       	eor	r24, r24
     708:	60 e0       	ldi	r22, 0x00	; 0
     70a:	70 e0       	ldi	r23, 0x00	; 0
     70c:	84 2b       	or	r24, r20
     70e:	95 2b       	or	r25, r21
     710:	a6 2b       	or	r26, r22
     712:	b7 2b       	or	r27, r23
     714:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     718:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     71c:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     720:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     724:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x4>
     728:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x5>
     72c:	30 97       	sbiw	r30, 0x00	; 0
     72e:	39 f0       	breq	.+14     	; 0x73e <__vector_3+0xb2>
     730:	62 e0       	ldi	r22, 0x02	; 2
     732:	70 e0       	ldi	r23, 0x00	; 0
     734:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x4>
     738:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x5>
     73c:	09 95       	icall
     73e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     742:	ff 91       	pop	r31
     744:	ef 91       	pop	r30
     746:	bf 91       	pop	r27
     748:	af 91       	pop	r26
     74a:	9f 91       	pop	r25
     74c:	8f 91       	pop	r24
     74e:	7f 91       	pop	r23
     750:	6f 91       	pop	r22
     752:	5f 91       	pop	r21
     754:	4f 91       	pop	r20
     756:	3f 91       	pop	r19
     758:	2f 91       	pop	r18
     75a:	0f 90       	pop	r0
     75c:	0f be       	out	0x3f, r0	; 63
     75e:	0f 90       	pop	r0
     760:	1f 90       	pop	r1
     762:	18 95       	reti

00000764 <__vector_4>:
     764:	1f 92       	push	r1
     766:	0f 92       	push	r0
     768:	0f b6       	in	r0, 0x3f	; 63
     76a:	0f 92       	push	r0
     76c:	11 24       	eor	r1, r1
     76e:	2f 93       	push	r18
     770:	3f 93       	push	r19
     772:	4f 93       	push	r20
     774:	5f 93       	push	r21
     776:	6f 93       	push	r22
     778:	7f 93       	push	r23
     77a:	8f 93       	push	r24
     77c:	9f 93       	push	r25
     77e:	af 93       	push	r26
     780:	bf 93       	push	r27
     782:	ef 93       	push	r30
     784:	ff 93       	push	r31
     786:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     78a:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     78e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     792:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     796:	c9 01       	movw	r24, r18
     798:	03 2e       	mov	r0, r19
     79a:	00 0c       	add	r0, r0
     79c:	aa 0b       	sbc	r26, r26
     79e:	bb 0b       	sbc	r27, r27
     7a0:	dc 01       	movw	r26, r24
     7a2:	99 27       	eor	r25, r25
     7a4:	88 27       	eor	r24, r24
     7a6:	60 e0       	ldi	r22, 0x00	; 0
     7a8:	70 e0       	ldi	r23, 0x00	; 0
     7aa:	84 2b       	or	r24, r20
     7ac:	95 2b       	or	r25, r21
     7ae:	a6 2b       	or	r26, r22
     7b0:	b7 2b       	or	r27, r23
     7b2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     7b6:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     7ba:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     7be:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     7c2:	b0 9b       	sbis	0x16, 0	; 22
     7c4:	1b c0       	rjmp	.+54     	; 0x7fc <__vector_4+0x98>
     7c6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     7ca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     7ce:	c9 01       	movw	r24, r18
     7d0:	01 96       	adiw	r24, 0x01	; 1
     7d2:	09 2e       	mov	r0, r25
     7d4:	00 0c       	add	r0, r0
     7d6:	aa 0b       	sbc	r26, r26
     7d8:	bb 0b       	sbc	r27, r27
     7da:	dc 01       	movw	r26, r24
     7dc:	99 27       	eor	r25, r25
     7de:	88 27       	eor	r24, r24
     7e0:	60 e0       	ldi	r22, 0x00	; 0
     7e2:	70 e0       	ldi	r23, 0x00	; 0
     7e4:	84 2b       	or	r24, r20
     7e6:	95 2b       	or	r25, r21
     7e8:	a6 2b       	or	r26, r22
     7ea:	b7 2b       	or	r27, r23
     7ec:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     7f0:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     7f4:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     7f8:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     7fc:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x6>
     800:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x7>
     804:	30 97       	sbiw	r30, 0x00	; 0
     806:	39 f0       	breq	.+14     	; 0x816 <__vector_4+0xb2>
     808:	63 e0       	ldi	r22, 0x03	; 3
     80a:	70 e0       	ldi	r23, 0x00	; 0
     80c:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x6>
     810:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x7>
     814:	09 95       	icall
     816:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     81a:	ff 91       	pop	r31
     81c:	ef 91       	pop	r30
     81e:	bf 91       	pop	r27
     820:	af 91       	pop	r26
     822:	9f 91       	pop	r25
     824:	8f 91       	pop	r24
     826:	7f 91       	pop	r23
     828:	6f 91       	pop	r22
     82a:	5f 91       	pop	r21
     82c:	4f 91       	pop	r20
     82e:	3f 91       	pop	r19
     830:	2f 91       	pop	r18
     832:	0f 90       	pop	r0
     834:	0f be       	out	0x3f, r0	; 63
     836:	0f 90       	pop	r0
     838:	1f 90       	pop	r1
     83a:	18 95       	reti

0000083c <__vector_5>:
     83c:	1f 92       	push	r1
     83e:	0f 92       	push	r0
     840:	0f b6       	in	r0, 0x3f	; 63
     842:	0f 92       	push	r0
     844:	11 24       	eor	r1, r1
     846:	2f 93       	push	r18
     848:	3f 93       	push	r19
     84a:	4f 93       	push	r20
     84c:	5f 93       	push	r21
     84e:	6f 93       	push	r22
     850:	7f 93       	push	r23
     852:	8f 93       	push	r24
     854:	9f 93       	push	r25
     856:	af 93       	push	r26
     858:	bf 93       	push	r27
     85a:	ef 93       	push	r30
     85c:	ff 93       	push	r31
     85e:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     862:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     866:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     86a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     86e:	c9 01       	movw	r24, r18
     870:	03 2e       	mov	r0, r19
     872:	00 0c       	add	r0, r0
     874:	aa 0b       	sbc	r26, r26
     876:	bb 0b       	sbc	r27, r27
     878:	dc 01       	movw	r26, r24
     87a:	99 27       	eor	r25, r25
     87c:	88 27       	eor	r24, r24
     87e:	60 e0       	ldi	r22, 0x00	; 0
     880:	70 e0       	ldi	r23, 0x00	; 0
     882:	84 2b       	or	r24, r20
     884:	95 2b       	or	r25, r21
     886:	a6 2b       	or	r26, r22
     888:	b7 2b       	or	r27, r23
     88a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     88e:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     892:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     896:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     89a:	b0 9b       	sbis	0x16, 0	; 22
     89c:	1b c0       	rjmp	.+54     	; 0x8d4 <__vector_5+0x98>
     89e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     8a2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     8a6:	c9 01       	movw	r24, r18
     8a8:	01 96       	adiw	r24, 0x01	; 1
     8aa:	09 2e       	mov	r0, r25
     8ac:	00 0c       	add	r0, r0
     8ae:	aa 0b       	sbc	r26, r26
     8b0:	bb 0b       	sbc	r27, r27
     8b2:	dc 01       	movw	r26, r24
     8b4:	99 27       	eor	r25, r25
     8b6:	88 27       	eor	r24, r24
     8b8:	60 e0       	ldi	r22, 0x00	; 0
     8ba:	70 e0       	ldi	r23, 0x00	; 0
     8bc:	84 2b       	or	r24, r20
     8be:	95 2b       	or	r25, r21
     8c0:	a6 2b       	or	r26, r22
     8c2:	b7 2b       	or	r27, r23
     8c4:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     8c8:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     8cc:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     8d0:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     8d4:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x8>
     8d8:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x9>
     8dc:	30 97       	sbiw	r30, 0x00	; 0
     8de:	39 f0       	breq	.+14     	; 0x8ee <__vector_5+0xb2>
     8e0:	64 e0       	ldi	r22, 0x04	; 4
     8e2:	70 e0       	ldi	r23, 0x00	; 0
     8e4:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x8>
     8e8:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x9>
     8ec:	09 95       	icall
     8ee:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     8f2:	ff 91       	pop	r31
     8f4:	ef 91       	pop	r30
     8f6:	bf 91       	pop	r27
     8f8:	af 91       	pop	r26
     8fa:	9f 91       	pop	r25
     8fc:	8f 91       	pop	r24
     8fe:	7f 91       	pop	r23
     900:	6f 91       	pop	r22
     902:	5f 91       	pop	r21
     904:	4f 91       	pop	r20
     906:	3f 91       	pop	r19
     908:	2f 91       	pop	r18
     90a:	0f 90       	pop	r0
     90c:	0f be       	out	0x3f, r0	; 63
     90e:	0f 90       	pop	r0
     910:	1f 90       	pop	r1
     912:	18 95       	reti

00000914 <__vector_10>:
     914:	1f 92       	push	r1
     916:	0f 92       	push	r0
     918:	0f b6       	in	r0, 0x3f	; 63
     91a:	0f 92       	push	r0
     91c:	11 24       	eor	r1, r1
     91e:	2f 93       	push	r18
     920:	3f 93       	push	r19
     922:	4f 93       	push	r20
     924:	5f 93       	push	r21
     926:	6f 93       	push	r22
     928:	7f 93       	push	r23
     92a:	8f 93       	push	r24
     92c:	9f 93       	push	r25
     92e:	af 93       	push	r26
     930:	bf 93       	push	r27
     932:	ef 93       	push	r30
     934:	ff 93       	push	r31
     936:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     93a:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     93e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     942:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     946:	c9 01       	movw	r24, r18
     948:	03 2e       	mov	r0, r19
     94a:	00 0c       	add	r0, r0
     94c:	aa 0b       	sbc	r26, r26
     94e:	bb 0b       	sbc	r27, r27
     950:	dc 01       	movw	r26, r24
     952:	99 27       	eor	r25, r25
     954:	88 27       	eor	r24, r24
     956:	60 e0       	ldi	r22, 0x00	; 0
     958:	70 e0       	ldi	r23, 0x00	; 0
     95a:	84 2b       	or	r24, r20
     95c:	95 2b       	or	r25, r21
     95e:	a6 2b       	or	r26, r22
     960:	b7 2b       	or	r27, r23
     962:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     966:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     96a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     96e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     972:	b0 9b       	sbis	0x16, 0	; 22
     974:	1b c0       	rjmp	.+54     	; 0x9ac <__vector_10+0x98>
     976:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     97a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     97e:	c9 01       	movw	r24, r18
     980:	01 96       	adiw	r24, 0x01	; 1
     982:	09 2e       	mov	r0, r25
     984:	00 0c       	add	r0, r0
     986:	aa 0b       	sbc	r26, r26
     988:	bb 0b       	sbc	r27, r27
     98a:	dc 01       	movw	r26, r24
     98c:	99 27       	eor	r25, r25
     98e:	88 27       	eor	r24, r24
     990:	60 e0       	ldi	r22, 0x00	; 0
     992:	70 e0       	ldi	r23, 0x00	; 0
     994:	84 2b       	or	r24, r20
     996:	95 2b       	or	r25, r21
     998:	a6 2b       	or	r26, r22
     99a:	b7 2b       	or	r27, r23
     99c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     9a0:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     9a4:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     9a8:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     9ac:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0xa>
     9b0:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0xb>
     9b4:	30 97       	sbiw	r30, 0x00	; 0
     9b6:	39 f0       	breq	.+14     	; 0x9c6 <__vector_10+0xb2>
     9b8:	65 e0       	ldi	r22, 0x05	; 5
     9ba:	70 e0       	ldi	r23, 0x00	; 0
     9bc:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0xa>
     9c0:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0xb>
     9c4:	09 95       	icall
     9c6:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     9ca:	ff 91       	pop	r31
     9cc:	ef 91       	pop	r30
     9ce:	bf 91       	pop	r27
     9d0:	af 91       	pop	r26
     9d2:	9f 91       	pop	r25
     9d4:	8f 91       	pop	r24
     9d6:	7f 91       	pop	r23
     9d8:	6f 91       	pop	r22
     9da:	5f 91       	pop	r21
     9dc:	4f 91       	pop	r20
     9de:	3f 91       	pop	r19
     9e0:	2f 91       	pop	r18
     9e2:	0f 90       	pop	r0
     9e4:	0f be       	out	0x3f, r0	; 63
     9e6:	0f 90       	pop	r0
     9e8:	1f 90       	pop	r1
     9ea:	18 95       	reti

000009ec <__vector_11>:
     9ec:	1f 92       	push	r1
     9ee:	0f 92       	push	r0
     9f0:	0f b6       	in	r0, 0x3f	; 63
     9f2:	0f 92       	push	r0
     9f4:	11 24       	eor	r1, r1
     9f6:	2f 93       	push	r18
     9f8:	3f 93       	push	r19
     9fa:	4f 93       	push	r20
     9fc:	5f 93       	push	r21
     9fe:	6f 93       	push	r22
     a00:	7f 93       	push	r23
     a02:	8f 93       	push	r24
     a04:	9f 93       	push	r25
     a06:	af 93       	push	r26
     a08:	bf 93       	push	r27
     a0a:	ef 93       	push	r30
     a0c:	ff 93       	push	r31
     a0e:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     a12:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     a16:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a1a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a1e:	c9 01       	movw	r24, r18
     a20:	03 2e       	mov	r0, r19
     a22:	00 0c       	add	r0, r0
     a24:	aa 0b       	sbc	r26, r26
     a26:	bb 0b       	sbc	r27, r27
     a28:	dc 01       	movw	r26, r24
     a2a:	99 27       	eor	r25, r25
     a2c:	88 27       	eor	r24, r24
     a2e:	60 e0       	ldi	r22, 0x00	; 0
     a30:	70 e0       	ldi	r23, 0x00	; 0
     a32:	84 2b       	or	r24, r20
     a34:	95 2b       	or	r25, r21
     a36:	a6 2b       	or	r26, r22
     a38:	b7 2b       	or	r27, r23
     a3a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     a3e:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     a42:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     a46:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     a4a:	b0 9b       	sbis	0x16, 0	; 22
     a4c:	1b c0       	rjmp	.+54     	; 0xa84 <__vector_11+0x98>
     a4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a56:	c9 01       	movw	r24, r18
     a58:	01 96       	adiw	r24, 0x01	; 1
     a5a:	09 2e       	mov	r0, r25
     a5c:	00 0c       	add	r0, r0
     a5e:	aa 0b       	sbc	r26, r26
     a60:	bb 0b       	sbc	r27, r27
     a62:	dc 01       	movw	r26, r24
     a64:	99 27       	eor	r25, r25
     a66:	88 27       	eor	r24, r24
     a68:	60 e0       	ldi	r22, 0x00	; 0
     a6a:	70 e0       	ldi	r23, 0x00	; 0
     a6c:	84 2b       	or	r24, r20
     a6e:	95 2b       	or	r25, r21
     a70:	a6 2b       	or	r26, r22
     a72:	b7 2b       	or	r27, r23
     a74:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     a78:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     a7c:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     a80:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     a84:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0xc>
     a88:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0xd>
     a8c:	30 97       	sbiw	r30, 0x00	; 0
     a8e:	39 f0       	breq	.+14     	; 0xa9e <__vector_11+0xb2>
     a90:	66 e0       	ldi	r22, 0x06	; 6
     a92:	70 e0       	ldi	r23, 0x00	; 0
     a94:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0xc>
     a98:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0xd>
     a9c:	09 95       	icall
     a9e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     aa2:	ff 91       	pop	r31
     aa4:	ef 91       	pop	r30
     aa6:	bf 91       	pop	r27
     aa8:	af 91       	pop	r26
     aaa:	9f 91       	pop	r25
     aac:	8f 91       	pop	r24
     aae:	7f 91       	pop	r23
     ab0:	6f 91       	pop	r22
     ab2:	5f 91       	pop	r21
     ab4:	4f 91       	pop	r20
     ab6:	3f 91       	pop	r19
     ab8:	2f 91       	pop	r18
     aba:	0f 90       	pop	r0
     abc:	0f be       	out	0x3f, r0	; 63
     abe:	0f 90       	pop	r0
     ac0:	1f 90       	pop	r1
     ac2:	18 95       	reti

00000ac4 <__vector_12>:
     ac4:	1f 92       	push	r1
     ac6:	0f 92       	push	r0
     ac8:	0f b6       	in	r0, 0x3f	; 63
     aca:	0f 92       	push	r0
     acc:	11 24       	eor	r1, r1
     ace:	2f 93       	push	r18
     ad0:	3f 93       	push	r19
     ad2:	4f 93       	push	r20
     ad4:	5f 93       	push	r21
     ad6:	6f 93       	push	r22
     ad8:	7f 93       	push	r23
     ada:	8f 93       	push	r24
     adc:	9f 93       	push	r25
     ade:	af 93       	push	r26
     ae0:	bf 93       	push	r27
     ae2:	ef 93       	push	r30
     ae4:	ff 93       	push	r31
     ae6:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     aea:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     aee:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     af2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     af6:	c9 01       	movw	r24, r18
     af8:	03 2e       	mov	r0, r19
     afa:	00 0c       	add	r0, r0
     afc:	aa 0b       	sbc	r26, r26
     afe:	bb 0b       	sbc	r27, r27
     b00:	dc 01       	movw	r26, r24
     b02:	99 27       	eor	r25, r25
     b04:	88 27       	eor	r24, r24
     b06:	60 e0       	ldi	r22, 0x00	; 0
     b08:	70 e0       	ldi	r23, 0x00	; 0
     b0a:	84 2b       	or	r24, r20
     b0c:	95 2b       	or	r25, r21
     b0e:	a6 2b       	or	r26, r22
     b10:	b7 2b       	or	r27, r23
     b12:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     b16:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     b1a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     b1e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     b22:	b0 9b       	sbis	0x16, 0	; 22
     b24:	1b c0       	rjmp	.+54     	; 0xb5c <__vector_12+0x98>
     b26:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b2a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b2e:	c9 01       	movw	r24, r18
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	09 2e       	mov	r0, r25
     b34:	00 0c       	add	r0, r0
     b36:	aa 0b       	sbc	r26, r26
     b38:	bb 0b       	sbc	r27, r27
     b3a:	dc 01       	movw	r26, r24
     b3c:	99 27       	eor	r25, r25
     b3e:	88 27       	eor	r24, r24
     b40:	60 e0       	ldi	r22, 0x00	; 0
     b42:	70 e0       	ldi	r23, 0x00	; 0
     b44:	84 2b       	or	r24, r20
     b46:	95 2b       	or	r25, r21
     b48:	a6 2b       	or	r26, r22
     b4a:	b7 2b       	or	r27, r23
     b4c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     b50:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     b54:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     b58:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     b5c:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0xe>
     b60:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0xf>
     b64:	30 97       	sbiw	r30, 0x00	; 0
     b66:	39 f0       	breq	.+14     	; 0xb76 <__vector_12+0xb2>
     b68:	67 e0       	ldi	r22, 0x07	; 7
     b6a:	70 e0       	ldi	r23, 0x00	; 0
     b6c:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0xe>
     b70:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0xf>
     b74:	09 95       	icall
     b76:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     b7a:	ff 91       	pop	r31
     b7c:	ef 91       	pop	r30
     b7e:	bf 91       	pop	r27
     b80:	af 91       	pop	r26
     b82:	9f 91       	pop	r25
     b84:	8f 91       	pop	r24
     b86:	7f 91       	pop	r23
     b88:	6f 91       	pop	r22
     b8a:	5f 91       	pop	r21
     b8c:	4f 91       	pop	r20
     b8e:	3f 91       	pop	r19
     b90:	2f 91       	pop	r18
     b92:	0f 90       	pop	r0
     b94:	0f be       	out	0x3f, r0	; 63
     b96:	0f 90       	pop	r0
     b98:	1f 90       	pop	r1
     b9a:	18 95       	reti

00000b9c <__vector_13>:
     b9c:	1f 92       	push	r1
     b9e:	0f 92       	push	r0
     ba0:	0f b6       	in	r0, 0x3f	; 63
     ba2:	0f 92       	push	r0
     ba4:	11 24       	eor	r1, r1
     ba6:	2f 93       	push	r18
     ba8:	3f 93       	push	r19
     baa:	4f 93       	push	r20
     bac:	5f 93       	push	r21
     bae:	6f 93       	push	r22
     bb0:	7f 93       	push	r23
     bb2:	8f 93       	push	r24
     bb4:	9f 93       	push	r25
     bb6:	af 93       	push	r26
     bb8:	bf 93       	push	r27
     bba:	ef 93       	push	r30
     bbc:	ff 93       	push	r31
     bbe:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     bc2:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     bc6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bca:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     bce:	c9 01       	movw	r24, r18
     bd0:	03 2e       	mov	r0, r19
     bd2:	00 0c       	add	r0, r0
     bd4:	aa 0b       	sbc	r26, r26
     bd6:	bb 0b       	sbc	r27, r27
     bd8:	dc 01       	movw	r26, r24
     bda:	99 27       	eor	r25, r25
     bdc:	88 27       	eor	r24, r24
     bde:	60 e0       	ldi	r22, 0x00	; 0
     be0:	70 e0       	ldi	r23, 0x00	; 0
     be2:	84 2b       	or	r24, r20
     be4:	95 2b       	or	r25, r21
     be6:	a6 2b       	or	r26, r22
     be8:	b7 2b       	or	r27, r23
     bea:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     bee:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     bf2:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     bf6:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     bfa:	b0 9b       	sbis	0x16, 0	; 22
     bfc:	1b c0       	rjmp	.+54     	; 0xc34 <__vector_13+0x98>
     bfe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c02:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c06:	c9 01       	movw	r24, r18
     c08:	01 96       	adiw	r24, 0x01	; 1
     c0a:	09 2e       	mov	r0, r25
     c0c:	00 0c       	add	r0, r0
     c0e:	aa 0b       	sbc	r26, r26
     c10:	bb 0b       	sbc	r27, r27
     c12:	dc 01       	movw	r26, r24
     c14:	99 27       	eor	r25, r25
     c16:	88 27       	eor	r24, r24
     c18:	60 e0       	ldi	r22, 0x00	; 0
     c1a:	70 e0       	ldi	r23, 0x00	; 0
     c1c:	84 2b       	or	r24, r20
     c1e:	95 2b       	or	r25, r21
     c20:	a6 2b       	or	r26, r22
     c22:	b7 2b       	or	r27, r23
     c24:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     c28:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     c2c:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     c30:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     c34:	e0 91 e0 01 	lds	r30, 0x01E0	; 0x8001e0 <mtable+0x10>
     c38:	f0 91 e1 01 	lds	r31, 0x01E1	; 0x8001e1 <mtable+0x11>
     c3c:	30 97       	sbiw	r30, 0x00	; 0
     c3e:	39 f0       	breq	.+14     	; 0xc4e <__vector_13+0xb2>
     c40:	68 e0       	ldi	r22, 0x08	; 8
     c42:	70 e0       	ldi	r23, 0x00	; 0
     c44:	80 91 48 01 	lds	r24, 0x0148	; 0x800148 <otable+0x10>
     c48:	90 91 49 01 	lds	r25, 0x0149	; 0x800149 <otable+0x11>
     c4c:	09 95       	icall
     c4e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     c52:	ff 91       	pop	r31
     c54:	ef 91       	pop	r30
     c56:	bf 91       	pop	r27
     c58:	af 91       	pop	r26
     c5a:	9f 91       	pop	r25
     c5c:	8f 91       	pop	r24
     c5e:	7f 91       	pop	r23
     c60:	6f 91       	pop	r22
     c62:	5f 91       	pop	r21
     c64:	4f 91       	pop	r20
     c66:	3f 91       	pop	r19
     c68:	2f 91       	pop	r18
     c6a:	0f 90       	pop	r0
     c6c:	0f be       	out	0x3f, r0	; 63
     c6e:	0f 90       	pop	r0
     c70:	1f 90       	pop	r1
     c72:	18 95       	reti

00000c74 <__vector_14>:
     c74:	1f 92       	push	r1
     c76:	0f 92       	push	r0
     c78:	0f b6       	in	r0, 0x3f	; 63
     c7a:	0f 92       	push	r0
     c7c:	11 24       	eor	r1, r1
     c7e:	2f 93       	push	r18
     c80:	3f 93       	push	r19
     c82:	4f 93       	push	r20
     c84:	5f 93       	push	r21
     c86:	6f 93       	push	r22
     c88:	7f 93       	push	r23
     c8a:	8f 93       	push	r24
     c8c:	9f 93       	push	r25
     c8e:	af 93       	push	r26
     c90:	bf 93       	push	r27
     c92:	ef 93       	push	r30
     c94:	ff 93       	push	r31
     c96:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     c9a:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     c9e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ca2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ca6:	c9 01       	movw	r24, r18
     ca8:	03 2e       	mov	r0, r19
     caa:	00 0c       	add	r0, r0
     cac:	aa 0b       	sbc	r26, r26
     cae:	bb 0b       	sbc	r27, r27
     cb0:	dc 01       	movw	r26, r24
     cb2:	99 27       	eor	r25, r25
     cb4:	88 27       	eor	r24, r24
     cb6:	60 e0       	ldi	r22, 0x00	; 0
     cb8:	70 e0       	ldi	r23, 0x00	; 0
     cba:	84 2b       	or	r24, r20
     cbc:	95 2b       	or	r25, r21
     cbe:	a6 2b       	or	r26, r22
     cc0:	b7 2b       	or	r27, r23
     cc2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     cc6:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     cca:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     cce:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     cd2:	b0 9b       	sbis	0x16, 0	; 22
     cd4:	1b c0       	rjmp	.+54     	; 0xd0c <__vector_14+0x98>
     cd6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cda:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cde:	c9 01       	movw	r24, r18
     ce0:	01 96       	adiw	r24, 0x01	; 1
     ce2:	09 2e       	mov	r0, r25
     ce4:	00 0c       	add	r0, r0
     ce6:	aa 0b       	sbc	r26, r26
     ce8:	bb 0b       	sbc	r27, r27
     cea:	dc 01       	movw	r26, r24
     cec:	99 27       	eor	r25, r25
     cee:	88 27       	eor	r24, r24
     cf0:	60 e0       	ldi	r22, 0x00	; 0
     cf2:	70 e0       	ldi	r23, 0x00	; 0
     cf4:	84 2b       	or	r24, r20
     cf6:	95 2b       	or	r25, r21
     cf8:	a6 2b       	or	r26, r22
     cfa:	b7 2b       	or	r27, r23
     cfc:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     d00:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     d04:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     d08:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     d0c:	e0 91 e2 01 	lds	r30, 0x01E2	; 0x8001e2 <mtable+0x12>
     d10:	f0 91 e3 01 	lds	r31, 0x01E3	; 0x8001e3 <mtable+0x13>
     d14:	30 97       	sbiw	r30, 0x00	; 0
     d16:	39 f0       	breq	.+14     	; 0xd26 <__vector_14+0xb2>
     d18:	69 e0       	ldi	r22, 0x09	; 9
     d1a:	70 e0       	ldi	r23, 0x00	; 0
     d1c:	80 91 4a 01 	lds	r24, 0x014A	; 0x80014a <otable+0x12>
     d20:	90 91 4b 01 	lds	r25, 0x014B	; 0x80014b <otable+0x13>
     d24:	09 95       	icall
     d26:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     d2a:	ff 91       	pop	r31
     d2c:	ef 91       	pop	r30
     d2e:	bf 91       	pop	r27
     d30:	af 91       	pop	r26
     d32:	9f 91       	pop	r25
     d34:	8f 91       	pop	r24
     d36:	7f 91       	pop	r23
     d38:	6f 91       	pop	r22
     d3a:	5f 91       	pop	r21
     d3c:	4f 91       	pop	r20
     d3e:	3f 91       	pop	r19
     d40:	2f 91       	pop	r18
     d42:	0f 90       	pop	r0
     d44:	0f be       	out	0x3f, r0	; 63
     d46:	0f 90       	pop	r0
     d48:	1f 90       	pop	r1
     d4a:	18 95       	reti

00000d4c <__vector_15>:
     d4c:	1f 92       	push	r1
     d4e:	0f 92       	push	r0
     d50:	0f b6       	in	r0, 0x3f	; 63
     d52:	0f 92       	push	r0
     d54:	11 24       	eor	r1, r1
     d56:	2f 93       	push	r18
     d58:	3f 93       	push	r19
     d5a:	4f 93       	push	r20
     d5c:	5f 93       	push	r21
     d5e:	6f 93       	push	r22
     d60:	7f 93       	push	r23
     d62:	8f 93       	push	r24
     d64:	9f 93       	push	r25
     d66:	af 93       	push	r26
     d68:	bf 93       	push	r27
     d6a:	ef 93       	push	r30
     d6c:	ff 93       	push	r31
     d6e:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     d72:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     d76:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d7a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d7e:	c9 01       	movw	r24, r18
     d80:	03 2e       	mov	r0, r19
     d82:	00 0c       	add	r0, r0
     d84:	aa 0b       	sbc	r26, r26
     d86:	bb 0b       	sbc	r27, r27
     d88:	dc 01       	movw	r26, r24
     d8a:	99 27       	eor	r25, r25
     d8c:	88 27       	eor	r24, r24
     d8e:	60 e0       	ldi	r22, 0x00	; 0
     d90:	70 e0       	ldi	r23, 0x00	; 0
     d92:	84 2b       	or	r24, r20
     d94:	95 2b       	or	r25, r21
     d96:	a6 2b       	or	r26, r22
     d98:	b7 2b       	or	r27, r23
     d9a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     d9e:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     da2:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     da6:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     daa:	b0 9b       	sbis	0x16, 0	; 22
     dac:	1b c0       	rjmp	.+54     	; 0xde4 <__vector_15+0x98>
     dae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     db2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     db6:	c9 01       	movw	r24, r18
     db8:	01 96       	adiw	r24, 0x01	; 1
     dba:	09 2e       	mov	r0, r25
     dbc:	00 0c       	add	r0, r0
     dbe:	aa 0b       	sbc	r26, r26
     dc0:	bb 0b       	sbc	r27, r27
     dc2:	dc 01       	movw	r26, r24
     dc4:	99 27       	eor	r25, r25
     dc6:	88 27       	eor	r24, r24
     dc8:	60 e0       	ldi	r22, 0x00	; 0
     dca:	70 e0       	ldi	r23, 0x00	; 0
     dcc:	84 2b       	or	r24, r20
     dce:	95 2b       	or	r25, r21
     dd0:	a6 2b       	or	r26, r22
     dd2:	b7 2b       	or	r27, r23
     dd4:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     dd8:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     ddc:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     de0:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     de4:	e0 91 e4 01 	lds	r30, 0x01E4	; 0x8001e4 <mtable+0x14>
     de8:	f0 91 e5 01 	lds	r31, 0x01E5	; 0x8001e5 <mtable+0x15>
     dec:	30 97       	sbiw	r30, 0x00	; 0
     dee:	39 f0       	breq	.+14     	; 0xdfe <__vector_15+0xb2>
     df0:	6a e0       	ldi	r22, 0x0A	; 10
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	80 91 4c 01 	lds	r24, 0x014C	; 0x80014c <otable+0x14>
     df8:	90 91 4d 01 	lds	r25, 0x014D	; 0x80014d <otable+0x15>
     dfc:	09 95       	icall
     dfe:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     e02:	ff 91       	pop	r31
     e04:	ef 91       	pop	r30
     e06:	bf 91       	pop	r27
     e08:	af 91       	pop	r26
     e0a:	9f 91       	pop	r25
     e0c:	8f 91       	pop	r24
     e0e:	7f 91       	pop	r23
     e10:	6f 91       	pop	r22
     e12:	5f 91       	pop	r21
     e14:	4f 91       	pop	r20
     e16:	3f 91       	pop	r19
     e18:	2f 91       	pop	r18
     e1a:	0f 90       	pop	r0
     e1c:	0f be       	out	0x3f, r0	; 63
     e1e:	0f 90       	pop	r0
     e20:	1f 90       	pop	r1
     e22:	18 95       	reti

00000e24 <__vector_16>:
     e24:	1f 92       	push	r1
     e26:	0f 92       	push	r0
     e28:	0f b6       	in	r0, 0x3f	; 63
     e2a:	0f 92       	push	r0
     e2c:	11 24       	eor	r1, r1
     e2e:	2f 93       	push	r18
     e30:	3f 93       	push	r19
     e32:	4f 93       	push	r20
     e34:	5f 93       	push	r21
     e36:	6f 93       	push	r22
     e38:	7f 93       	push	r23
     e3a:	8f 93       	push	r24
     e3c:	9f 93       	push	r25
     e3e:	af 93       	push	r26
     e40:	bf 93       	push	r27
     e42:	ef 93       	push	r30
     e44:	ff 93       	push	r31
     e46:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     e4a:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     e4e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e52:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e56:	c9 01       	movw	r24, r18
     e58:	03 2e       	mov	r0, r19
     e5a:	00 0c       	add	r0, r0
     e5c:	aa 0b       	sbc	r26, r26
     e5e:	bb 0b       	sbc	r27, r27
     e60:	dc 01       	movw	r26, r24
     e62:	99 27       	eor	r25, r25
     e64:	88 27       	eor	r24, r24
     e66:	60 e0       	ldi	r22, 0x00	; 0
     e68:	70 e0       	ldi	r23, 0x00	; 0
     e6a:	84 2b       	or	r24, r20
     e6c:	95 2b       	or	r25, r21
     e6e:	a6 2b       	or	r26, r22
     e70:	b7 2b       	or	r27, r23
     e72:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     e76:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     e7a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     e7e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     e82:	b0 9b       	sbis	0x16, 0	; 22
     e84:	1b c0       	rjmp	.+54     	; 0xebc <__vector_16+0x98>
     e86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e8e:	c9 01       	movw	r24, r18
     e90:	01 96       	adiw	r24, 0x01	; 1
     e92:	09 2e       	mov	r0, r25
     e94:	00 0c       	add	r0, r0
     e96:	aa 0b       	sbc	r26, r26
     e98:	bb 0b       	sbc	r27, r27
     e9a:	dc 01       	movw	r26, r24
     e9c:	99 27       	eor	r25, r25
     e9e:	88 27       	eor	r24, r24
     ea0:	60 e0       	ldi	r22, 0x00	; 0
     ea2:	70 e0       	ldi	r23, 0x00	; 0
     ea4:	84 2b       	or	r24, r20
     ea6:	95 2b       	or	r25, r21
     ea8:	a6 2b       	or	r26, r22
     eaa:	b7 2b       	or	r27, r23
     eac:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     eb0:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     eb4:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     eb8:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     ebc:	e0 91 e6 01 	lds	r30, 0x01E6	; 0x8001e6 <mtable+0x16>
     ec0:	f0 91 e7 01 	lds	r31, 0x01E7	; 0x8001e7 <mtable+0x17>
     ec4:	30 97       	sbiw	r30, 0x00	; 0
     ec6:	39 f0       	breq	.+14     	; 0xed6 <__vector_16+0xb2>
     ec8:	6b e0       	ldi	r22, 0x0B	; 11
     eca:	70 e0       	ldi	r23, 0x00	; 0
     ecc:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <otable+0x16>
     ed0:	90 91 4f 01 	lds	r25, 0x014F	; 0x80014f <otable+0x17>
     ed4:	09 95       	icall
     ed6:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     eda:	ff 91       	pop	r31
     edc:	ef 91       	pop	r30
     ede:	bf 91       	pop	r27
     ee0:	af 91       	pop	r26
     ee2:	9f 91       	pop	r25
     ee4:	8f 91       	pop	r24
     ee6:	7f 91       	pop	r23
     ee8:	6f 91       	pop	r22
     eea:	5f 91       	pop	r21
     eec:	4f 91       	pop	r20
     eee:	3f 91       	pop	r19
     ef0:	2f 91       	pop	r18
     ef2:	0f 90       	pop	r0
     ef4:	0f be       	out	0x3f, r0	; 63
     ef6:	0f 90       	pop	r0
     ef8:	1f 90       	pop	r1
     efa:	18 95       	reti

00000efc <__vector_17>:
     efc:	1f 92       	push	r1
     efe:	0f 92       	push	r0
     f00:	0f b6       	in	r0, 0x3f	; 63
     f02:	0f 92       	push	r0
     f04:	11 24       	eor	r1, r1
     f06:	2f 93       	push	r18
     f08:	3f 93       	push	r19
     f0a:	4f 93       	push	r20
     f0c:	5f 93       	push	r21
     f0e:	6f 93       	push	r22
     f10:	7f 93       	push	r23
     f12:	8f 93       	push	r24
     f14:	9f 93       	push	r25
     f16:	af 93       	push	r26
     f18:	bf 93       	push	r27
     f1a:	ef 93       	push	r30
     f1c:	ff 93       	push	r31
     f1e:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     f22:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     f26:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f2a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f2e:	c9 01       	movw	r24, r18
     f30:	03 2e       	mov	r0, r19
     f32:	00 0c       	add	r0, r0
     f34:	aa 0b       	sbc	r26, r26
     f36:	bb 0b       	sbc	r27, r27
     f38:	dc 01       	movw	r26, r24
     f3a:	99 27       	eor	r25, r25
     f3c:	88 27       	eor	r24, r24
     f3e:	60 e0       	ldi	r22, 0x00	; 0
     f40:	70 e0       	ldi	r23, 0x00	; 0
     f42:	84 2b       	or	r24, r20
     f44:	95 2b       	or	r25, r21
     f46:	a6 2b       	or	r26, r22
     f48:	b7 2b       	or	r27, r23
     f4a:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     f4e:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     f52:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     f56:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     f5a:	b0 9b       	sbis	0x16, 0	; 22
     f5c:	1b c0       	rjmp	.+54     	; 0xf94 <__vector_17+0x98>
     f5e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f62:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f66:	c9 01       	movw	r24, r18
     f68:	01 96       	adiw	r24, 0x01	; 1
     f6a:	09 2e       	mov	r0, r25
     f6c:	00 0c       	add	r0, r0
     f6e:	aa 0b       	sbc	r26, r26
     f70:	bb 0b       	sbc	r27, r27
     f72:	dc 01       	movw	r26, r24
     f74:	99 27       	eor	r25, r25
     f76:	88 27       	eor	r24, r24
     f78:	60 e0       	ldi	r22, 0x00	; 0
     f7a:	70 e0       	ldi	r23, 0x00	; 0
     f7c:	84 2b       	or	r24, r20
     f7e:	95 2b       	or	r25, r21
     f80:	a6 2b       	or	r26, r22
     f82:	b7 2b       	or	r27, r23
     f84:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
     f88:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
     f8c:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
     f90:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
     f94:	e0 91 e8 01 	lds	r30, 0x01E8	; 0x8001e8 <mtable+0x18>
     f98:	f0 91 e9 01 	lds	r31, 0x01E9	; 0x8001e9 <mtable+0x19>
     f9c:	30 97       	sbiw	r30, 0x00	; 0
     f9e:	39 f0       	breq	.+14     	; 0xfae <__vector_17+0xb2>
     fa0:	6c e0       	ldi	r22, 0x0C	; 12
     fa2:	70 e0       	ldi	r23, 0x00	; 0
     fa4:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <otable+0x18>
     fa8:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <otable+0x19>
     fac:	09 95       	icall
     fae:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
     fb2:	ff 91       	pop	r31
     fb4:	ef 91       	pop	r30
     fb6:	bf 91       	pop	r27
     fb8:	af 91       	pop	r26
     fba:	9f 91       	pop	r25
     fbc:	8f 91       	pop	r24
     fbe:	7f 91       	pop	r23
     fc0:	6f 91       	pop	r22
     fc2:	5f 91       	pop	r21
     fc4:	4f 91       	pop	r20
     fc6:	3f 91       	pop	r19
     fc8:	2f 91       	pop	r18
     fca:	0f 90       	pop	r0
     fcc:	0f be       	out	0x3f, r0	; 63
     fce:	0f 90       	pop	r0
     fd0:	1f 90       	pop	r1
     fd2:	18 95       	reti

00000fd4 <__vector_18>:
     fd4:	1f 92       	push	r1
     fd6:	0f 92       	push	r0
     fd8:	0f b6       	in	r0, 0x3f	; 63
     fda:	0f 92       	push	r0
     fdc:	11 24       	eor	r1, r1
     fde:	2f 93       	push	r18
     fe0:	3f 93       	push	r19
     fe2:	4f 93       	push	r20
     fe4:	5f 93       	push	r21
     fe6:	6f 93       	push	r22
     fe8:	7f 93       	push	r23
     fea:	8f 93       	push	r24
     fec:	9f 93       	push	r25
     fee:	af 93       	push	r26
     ff0:	bf 93       	push	r27
     ff2:	ef 93       	push	r30
     ff4:	ff 93       	push	r31
     ff6:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
     ffa:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
     ffe:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1002:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1006:	c9 01       	movw	r24, r18
    1008:	03 2e       	mov	r0, r19
    100a:	00 0c       	add	r0, r0
    100c:	aa 0b       	sbc	r26, r26
    100e:	bb 0b       	sbc	r27, r27
    1010:	dc 01       	movw	r26, r24
    1012:	99 27       	eor	r25, r25
    1014:	88 27       	eor	r24, r24
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	70 e0       	ldi	r23, 0x00	; 0
    101a:	84 2b       	or	r24, r20
    101c:	95 2b       	or	r25, r21
    101e:	a6 2b       	or	r26, r22
    1020:	b7 2b       	or	r27, r23
    1022:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    1026:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    102a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    102e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    1032:	b0 9b       	sbis	0x16, 0	; 22
    1034:	1b c0       	rjmp	.+54     	; 0x106c <__vector_18+0x98>
    1036:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    103a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    103e:	c9 01       	movw	r24, r18
    1040:	01 96       	adiw	r24, 0x01	; 1
    1042:	09 2e       	mov	r0, r25
    1044:	00 0c       	add	r0, r0
    1046:	aa 0b       	sbc	r26, r26
    1048:	bb 0b       	sbc	r27, r27
    104a:	dc 01       	movw	r26, r24
    104c:	99 27       	eor	r25, r25
    104e:	88 27       	eor	r24, r24
    1050:	60 e0       	ldi	r22, 0x00	; 0
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	84 2b       	or	r24, r20
    1056:	95 2b       	or	r25, r21
    1058:	a6 2b       	or	r26, r22
    105a:	b7 2b       	or	r27, r23
    105c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    1060:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    1064:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    1068:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    106c:	e0 91 ea 01 	lds	r30, 0x01EA	; 0x8001ea <mtable+0x1a>
    1070:	f0 91 eb 01 	lds	r31, 0x01EB	; 0x8001eb <mtable+0x1b>
    1074:	30 97       	sbiw	r30, 0x00	; 0
    1076:	39 f0       	breq	.+14     	; 0x1086 <__vector_18+0xb2>
    1078:	6d e0       	ldi	r22, 0x0D	; 13
    107a:	70 e0       	ldi	r23, 0x00	; 0
    107c:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <otable+0x1a>
    1080:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <otable+0x1b>
    1084:	09 95       	icall
    1086:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    108a:	ff 91       	pop	r31
    108c:	ef 91       	pop	r30
    108e:	bf 91       	pop	r27
    1090:	af 91       	pop	r26
    1092:	9f 91       	pop	r25
    1094:	8f 91       	pop	r24
    1096:	7f 91       	pop	r23
    1098:	6f 91       	pop	r22
    109a:	5f 91       	pop	r21
    109c:	4f 91       	pop	r20
    109e:	3f 91       	pop	r19
    10a0:	2f 91       	pop	r18
    10a2:	0f 90       	pop	r0
    10a4:	0f be       	out	0x3f, r0	; 63
    10a6:	0f 90       	pop	r0
    10a8:	1f 90       	pop	r1
    10aa:	18 95       	reti

000010ac <__vector_19>:
    10ac:	1f 92       	push	r1
    10ae:	0f 92       	push	r0
    10b0:	0f b6       	in	r0, 0x3f	; 63
    10b2:	0f 92       	push	r0
    10b4:	11 24       	eor	r1, r1
    10b6:	2f 93       	push	r18
    10b8:	3f 93       	push	r19
    10ba:	4f 93       	push	r20
    10bc:	5f 93       	push	r21
    10be:	6f 93       	push	r22
    10c0:	7f 93       	push	r23
    10c2:	8f 93       	push	r24
    10c4:	9f 93       	push	r25
    10c6:	af 93       	push	r26
    10c8:	bf 93       	push	r27
    10ca:	ef 93       	push	r30
    10cc:	ff 93       	push	r31
    10ce:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
    10d2:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
    10d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10de:	c9 01       	movw	r24, r18
    10e0:	03 2e       	mov	r0, r19
    10e2:	00 0c       	add	r0, r0
    10e4:	aa 0b       	sbc	r26, r26
    10e6:	bb 0b       	sbc	r27, r27
    10e8:	dc 01       	movw	r26, r24
    10ea:	99 27       	eor	r25, r25
    10ec:	88 27       	eor	r24, r24
    10ee:	60 e0       	ldi	r22, 0x00	; 0
    10f0:	70 e0       	ldi	r23, 0x00	; 0
    10f2:	84 2b       	or	r24, r20
    10f4:	95 2b       	or	r25, r21
    10f6:	a6 2b       	or	r26, r22
    10f8:	b7 2b       	or	r27, r23
    10fa:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    10fe:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    1102:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    1106:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    110a:	b0 9b       	sbis	0x16, 0	; 22
    110c:	1b c0       	rjmp	.+54     	; 0x1144 <__vector_19+0x98>
    110e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1112:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1116:	c9 01       	movw	r24, r18
    1118:	01 96       	adiw	r24, 0x01	; 1
    111a:	09 2e       	mov	r0, r25
    111c:	00 0c       	add	r0, r0
    111e:	aa 0b       	sbc	r26, r26
    1120:	bb 0b       	sbc	r27, r27
    1122:	dc 01       	movw	r26, r24
    1124:	99 27       	eor	r25, r25
    1126:	88 27       	eor	r24, r24
    1128:	60 e0       	ldi	r22, 0x00	; 0
    112a:	70 e0       	ldi	r23, 0x00	; 0
    112c:	84 2b       	or	r24, r20
    112e:	95 2b       	or	r25, r21
    1130:	a6 2b       	or	r26, r22
    1132:	b7 2b       	or	r27, r23
    1134:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    1138:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    113c:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    1140:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    1144:	e0 91 ec 01 	lds	r30, 0x01EC	; 0x8001ec <mtable+0x1c>
    1148:	f0 91 ed 01 	lds	r31, 0x01ED	; 0x8001ed <mtable+0x1d>
    114c:	30 97       	sbiw	r30, 0x00	; 0
    114e:	39 f0       	breq	.+14     	; 0x115e <__vector_19+0xb2>
    1150:	6e e0       	ldi	r22, 0x0E	; 14
    1152:	70 e0       	ldi	r23, 0x00	; 0
    1154:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <otable+0x1c>
    1158:	90 91 55 01 	lds	r25, 0x0155	; 0x800155 <otable+0x1d>
    115c:	09 95       	icall
    115e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    1162:	ff 91       	pop	r31
    1164:	ef 91       	pop	r30
    1166:	bf 91       	pop	r27
    1168:	af 91       	pop	r26
    116a:	9f 91       	pop	r25
    116c:	8f 91       	pop	r24
    116e:	7f 91       	pop	r23
    1170:	6f 91       	pop	r22
    1172:	5f 91       	pop	r21
    1174:	4f 91       	pop	r20
    1176:	3f 91       	pop	r19
    1178:	2f 91       	pop	r18
    117a:	0f 90       	pop	r0
    117c:	0f be       	out	0x3f, r0	; 63
    117e:	0f 90       	pop	r0
    1180:	1f 90       	pop	r1
    1182:	18 95       	reti

00001184 <__vector_20>:
    1184:	1f 92       	push	r1
    1186:	0f 92       	push	r0
    1188:	0f b6       	in	r0, 0x3f	; 63
    118a:	0f 92       	push	r0
    118c:	11 24       	eor	r1, r1
    118e:	2f 93       	push	r18
    1190:	3f 93       	push	r19
    1192:	4f 93       	push	r20
    1194:	5f 93       	push	r21
    1196:	6f 93       	push	r22
    1198:	7f 93       	push	r23
    119a:	8f 93       	push	r24
    119c:	9f 93       	push	r25
    119e:	af 93       	push	r26
    11a0:	bf 93       	push	r27
    11a2:	ef 93       	push	r30
    11a4:	ff 93       	push	r31
    11a6:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
    11aa:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
    11ae:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11b2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11b6:	c9 01       	movw	r24, r18
    11b8:	03 2e       	mov	r0, r19
    11ba:	00 0c       	add	r0, r0
    11bc:	aa 0b       	sbc	r26, r26
    11be:	bb 0b       	sbc	r27, r27
    11c0:	dc 01       	movw	r26, r24
    11c2:	99 27       	eor	r25, r25
    11c4:	88 27       	eor	r24, r24
    11c6:	60 e0       	ldi	r22, 0x00	; 0
    11c8:	70 e0       	ldi	r23, 0x00	; 0
    11ca:	84 2b       	or	r24, r20
    11cc:	95 2b       	or	r25, r21
    11ce:	a6 2b       	or	r26, r22
    11d0:	b7 2b       	or	r27, r23
    11d2:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    11d6:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    11da:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    11de:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    11e2:	b0 9b       	sbis	0x16, 0	; 22
    11e4:	1b c0       	rjmp	.+54     	; 0x121c <__vector_20+0x98>
    11e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11ee:	c9 01       	movw	r24, r18
    11f0:	01 96       	adiw	r24, 0x01	; 1
    11f2:	09 2e       	mov	r0, r25
    11f4:	00 0c       	add	r0, r0
    11f6:	aa 0b       	sbc	r26, r26
    11f8:	bb 0b       	sbc	r27, r27
    11fa:	dc 01       	movw	r26, r24
    11fc:	99 27       	eor	r25, r25
    11fe:	88 27       	eor	r24, r24
    1200:	60 e0       	ldi	r22, 0x00	; 0
    1202:	70 e0       	ldi	r23, 0x00	; 0
    1204:	84 2b       	or	r24, r20
    1206:	95 2b       	or	r25, r21
    1208:	a6 2b       	or	r26, r22
    120a:	b7 2b       	or	r27, r23
    120c:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    1210:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    1214:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    1218:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    121c:	e0 91 ee 01 	lds	r30, 0x01EE	; 0x8001ee <mtable+0x1e>
    1220:	f0 91 ef 01 	lds	r31, 0x01EF	; 0x8001ef <mtable+0x1f>
    1224:	30 97       	sbiw	r30, 0x00	; 0
    1226:	39 f0       	breq	.+14     	; 0x1236 <__vector_20+0xb2>
    1228:	6f e0       	ldi	r22, 0x0F	; 15
    122a:	70 e0       	ldi	r23, 0x00	; 0
    122c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <otable+0x1e>
    1230:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <otable+0x1f>
    1234:	09 95       	icall
    1236:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    123a:	ff 91       	pop	r31
    123c:	ef 91       	pop	r30
    123e:	bf 91       	pop	r27
    1240:	af 91       	pop	r26
    1242:	9f 91       	pop	r25
    1244:	8f 91       	pop	r24
    1246:	7f 91       	pop	r23
    1248:	6f 91       	pop	r22
    124a:	5f 91       	pop	r21
    124c:	4f 91       	pop	r20
    124e:	3f 91       	pop	r19
    1250:	2f 91       	pop	r18
    1252:	0f 90       	pop	r0
    1254:	0f be       	out	0x3f, r0	; 63
    1256:	0f 90       	pop	r0
    1258:	1f 90       	pop	r1
    125a:	18 95       	reti

0000125c <__vector_21>:
    125c:	1f 92       	push	r1
    125e:	0f 92       	push	r0
    1260:	0f b6       	in	r0, 0x3f	; 63
    1262:	0f 92       	push	r0
    1264:	11 24       	eor	r1, r1
    1266:	2f 93       	push	r18
    1268:	3f 93       	push	r19
    126a:	4f 93       	push	r20
    126c:	5f 93       	push	r21
    126e:	6f 93       	push	r22
    1270:	7f 93       	push	r23
    1272:	8f 93       	push	r24
    1274:	9f 93       	push	r25
    1276:	af 93       	push	r26
    1278:	bf 93       	push	r27
    127a:	ef 93       	push	r30
    127c:	ff 93       	push	r31
    127e:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
    1282:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
    1286:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    128a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    128e:	c9 01       	movw	r24, r18
    1290:	03 2e       	mov	r0, r19
    1292:	00 0c       	add	r0, r0
    1294:	aa 0b       	sbc	r26, r26
    1296:	bb 0b       	sbc	r27, r27
    1298:	dc 01       	movw	r26, r24
    129a:	99 27       	eor	r25, r25
    129c:	88 27       	eor	r24, r24
    129e:	60 e0       	ldi	r22, 0x00	; 0
    12a0:	70 e0       	ldi	r23, 0x00	; 0
    12a2:	84 2b       	or	r24, r20
    12a4:	95 2b       	or	r25, r21
    12a6:	a6 2b       	or	r26, r22
    12a8:	b7 2b       	or	r27, r23
    12aa:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    12ae:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    12b2:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    12b6:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    12ba:	b0 9b       	sbis	0x16, 0	; 22
    12bc:	1b c0       	rjmp	.+54     	; 0x12f4 <__vector_21+0x98>
    12be:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12c2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12c6:	c9 01       	movw	r24, r18
    12c8:	01 96       	adiw	r24, 0x01	; 1
    12ca:	09 2e       	mov	r0, r25
    12cc:	00 0c       	add	r0, r0
    12ce:	aa 0b       	sbc	r26, r26
    12d0:	bb 0b       	sbc	r27, r27
    12d2:	dc 01       	movw	r26, r24
    12d4:	99 27       	eor	r25, r25
    12d6:	88 27       	eor	r24, r24
    12d8:	60 e0       	ldi	r22, 0x00	; 0
    12da:	70 e0       	ldi	r23, 0x00	; 0
    12dc:	84 2b       	or	r24, r20
    12de:	95 2b       	or	r25, r21
    12e0:	a6 2b       	or	r26, r22
    12e2:	b7 2b       	or	r27, r23
    12e4:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    12e8:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    12ec:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    12f0:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    12f4:	e0 91 f0 01 	lds	r30, 0x01F0	; 0x8001f0 <mtable+0x20>
    12f8:	f0 91 f1 01 	lds	r31, 0x01F1	; 0x8001f1 <mtable+0x21>
    12fc:	30 97       	sbiw	r30, 0x00	; 0
    12fe:	39 f0       	breq	.+14     	; 0x130e <__vector_21+0xb2>
    1300:	60 e1       	ldi	r22, 0x10	; 16
    1302:	70 e0       	ldi	r23, 0x00	; 0
    1304:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <otable+0x20>
    1308:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <otable+0x21>
    130c:	09 95       	icall
    130e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    1312:	ff 91       	pop	r31
    1314:	ef 91       	pop	r30
    1316:	bf 91       	pop	r27
    1318:	af 91       	pop	r26
    131a:	9f 91       	pop	r25
    131c:	8f 91       	pop	r24
    131e:	7f 91       	pop	r23
    1320:	6f 91       	pop	r22
    1322:	5f 91       	pop	r21
    1324:	4f 91       	pop	r20
    1326:	3f 91       	pop	r19
    1328:	2f 91       	pop	r18
    132a:	0f 90       	pop	r0
    132c:	0f be       	out	0x3f, r0	; 63
    132e:	0f 90       	pop	r0
    1330:	1f 90       	pop	r1
    1332:	18 95       	reti

00001334 <__vector_22>:
    1334:	1f 92       	push	r1
    1336:	0f 92       	push	r0
    1338:	0f b6       	in	r0, 0x3f	; 63
    133a:	0f 92       	push	r0
    133c:	11 24       	eor	r1, r1
    133e:	2f 93       	push	r18
    1340:	3f 93       	push	r19
    1342:	4f 93       	push	r20
    1344:	5f 93       	push	r21
    1346:	6f 93       	push	r22
    1348:	7f 93       	push	r23
    134a:	8f 93       	push	r24
    134c:	9f 93       	push	r25
    134e:	af 93       	push	r26
    1350:	bf 93       	push	r27
    1352:	ef 93       	push	r30
    1354:	ff 93       	push	r31
    1356:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
    135a:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
    135e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1362:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1366:	c9 01       	movw	r24, r18
    1368:	03 2e       	mov	r0, r19
    136a:	00 0c       	add	r0, r0
    136c:	aa 0b       	sbc	r26, r26
    136e:	bb 0b       	sbc	r27, r27
    1370:	dc 01       	movw	r26, r24
    1372:	99 27       	eor	r25, r25
    1374:	88 27       	eor	r24, r24
    1376:	60 e0       	ldi	r22, 0x00	; 0
    1378:	70 e0       	ldi	r23, 0x00	; 0
    137a:	84 2b       	or	r24, r20
    137c:	95 2b       	or	r25, r21
    137e:	a6 2b       	or	r26, r22
    1380:	b7 2b       	or	r27, r23
    1382:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    1386:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    138a:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    138e:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    1392:	b0 9b       	sbis	0x16, 0	; 22
    1394:	1b c0       	rjmp	.+54     	; 0x13cc <__vector_22+0x98>
    1396:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    139a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    139e:	c9 01       	movw	r24, r18
    13a0:	01 96       	adiw	r24, 0x01	; 1
    13a2:	09 2e       	mov	r0, r25
    13a4:	00 0c       	add	r0, r0
    13a6:	aa 0b       	sbc	r26, r26
    13a8:	bb 0b       	sbc	r27, r27
    13aa:	dc 01       	movw	r26, r24
    13ac:	99 27       	eor	r25, r25
    13ae:	88 27       	eor	r24, r24
    13b0:	60 e0       	ldi	r22, 0x00	; 0
    13b2:	70 e0       	ldi	r23, 0x00	; 0
    13b4:	84 2b       	or	r24, r20
    13b6:	95 2b       	or	r25, r21
    13b8:	a6 2b       	or	r26, r22
    13ba:	b7 2b       	or	r27, r23
    13bc:	80 93 30 01 	sts	0x0130, r24	; 0x800130 <timestamp>
    13c0:	90 93 31 01 	sts	0x0131, r25	; 0x800131 <timestamp+0x1>
    13c4:	a0 93 32 01 	sts	0x0132, r26	; 0x800132 <timestamp+0x2>
    13c8:	b0 93 33 01 	sts	0x0133, r27	; 0x800133 <timestamp+0x3>
    13cc:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable+0x22>
    13d0:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x23>
    13d4:	30 97       	sbiw	r30, 0x00	; 0
    13d6:	39 f0       	breq	.+14     	; 0x13e6 <__vector_22+0xb2>
    13d8:	61 e1       	ldi	r22, 0x11	; 17
    13da:	70 e0       	ldi	r23, 0x00	; 0
    13dc:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable+0x22>
    13e0:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x23>
    13e4:	09 95       	icall
    13e6:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    13ea:	ff 91       	pop	r31
    13ec:	ef 91       	pop	r30
    13ee:	bf 91       	pop	r27
    13f0:	af 91       	pop	r26
    13f2:	9f 91       	pop	r25
    13f4:	8f 91       	pop	r24
    13f6:	7f 91       	pop	r23
    13f8:	6f 91       	pop	r22
    13fa:	5f 91       	pop	r21
    13fc:	4f 91       	pop	r20
    13fe:	3f 91       	pop	r19
    1400:	2f 91       	pop	r18
    1402:	0f 90       	pop	r0
    1404:	0f be       	out	0x3f, r0	; 63
    1406:	0f 90       	pop	r0
    1408:	1f 90       	pop	r1
    140a:	18 95       	reti

0000140c <enqueueByDeadline>:
    140c:	ef 92       	push	r14
    140e:	ff 92       	push	r15
    1410:	0f 93       	push	r16
    1412:	1f 93       	push	r17
    1414:	cf 93       	push	r28
    1416:	df 93       	push	r29
    1418:	7b 01       	movw	r14, r22
    141a:	eb 01       	movw	r28, r22
    141c:	a8 81       	ld	r26, Y
    141e:	b9 81       	ldd	r27, Y+1	; 0x01
    1420:	10 97       	sbiw	r26, 0x00	; 0
    1422:	61 f1       	breq	.+88     	; 0x147c <enqueueByDeadline+0x70>
    1424:	fc 01       	movw	r30, r24
    1426:	06 81       	ldd	r16, Z+6	; 0x06
    1428:	17 81       	ldd	r17, Z+7	; 0x07
    142a:	20 85       	ldd	r18, Z+8	; 0x08
    142c:	31 85       	ldd	r19, Z+9	; 0x09
    142e:	16 96       	adiw	r26, 0x06	; 6
    1430:	4d 91       	ld	r20, X+
    1432:	5d 91       	ld	r21, X+
    1434:	6d 91       	ld	r22, X+
    1436:	7c 91       	ld	r23, X
    1438:	19 97       	sbiw	r26, 0x09	; 9
    143a:	04 17       	cp	r16, r20
    143c:	15 07       	cpc	r17, r21
    143e:	26 07       	cpc	r18, r22
    1440:	37 07       	cpc	r19, r23
    1442:	14 f4       	brge	.+4      	; 0x1448 <enqueueByDeadline+0x3c>
    1444:	1b c0       	rjmp	.+54     	; 0x147c <enqueueByDeadline+0x70>
    1446:	df 01       	movw	r26, r30
    1448:	ed 91       	ld	r30, X+
    144a:	fc 91       	ld	r31, X
    144c:	11 97       	sbiw	r26, 0x01	; 1
    144e:	30 97       	sbiw	r30, 0x00	; 0
    1450:	49 f0       	breq	.+18     	; 0x1464 <enqueueByDeadline+0x58>
    1452:	46 81       	ldd	r20, Z+6	; 0x06
    1454:	57 81       	ldd	r21, Z+7	; 0x07
    1456:	60 85       	ldd	r22, Z+8	; 0x08
    1458:	71 85       	ldd	r23, Z+9	; 0x09
    145a:	04 17       	cp	r16, r20
    145c:	15 07       	cpc	r17, r21
    145e:	26 07       	cpc	r18, r22
    1460:	37 07       	cpc	r19, r23
    1462:	8c f7       	brge	.-30     	; 0x1446 <enqueueByDeadline+0x3a>
    1464:	ec 01       	movw	r28, r24
    1466:	f9 83       	std	Y+1, r31	; 0x01
    1468:	e8 83       	st	Y, r30
    146a:	10 97       	sbiw	r26, 0x00	; 0
    146c:	21 f4       	brne	.+8      	; 0x1476 <enqueueByDeadline+0x6a>
    146e:	f7 01       	movw	r30, r14
    1470:	91 83       	std	Z+1, r25	; 0x01
    1472:	80 83       	st	Z, r24
    1474:	07 c0       	rjmp	.+14     	; 0x1484 <enqueueByDeadline+0x78>
    1476:	8d 93       	st	X+, r24
    1478:	9c 93       	st	X, r25
    147a:	04 c0       	rjmp	.+8      	; 0x1484 <enqueueByDeadline+0x78>
    147c:	ec 01       	movw	r28, r24
    147e:	b9 83       	std	Y+1, r27	; 0x01
    1480:	a8 83       	st	Y, r26
    1482:	f5 cf       	rjmp	.-22     	; 0x146e <enqueueByDeadline+0x62>
    1484:	df 91       	pop	r29
    1486:	cf 91       	pop	r28
    1488:	1f 91       	pop	r17
    148a:	0f 91       	pop	r16
    148c:	ff 90       	pop	r15
    148e:	ef 90       	pop	r14
    1490:	08 95       	ret

00001492 <enqueueByBaseline>:
    1492:	ef 92       	push	r14
    1494:	ff 92       	push	r15
    1496:	0f 93       	push	r16
    1498:	1f 93       	push	r17
    149a:	cf 93       	push	r28
    149c:	df 93       	push	r29
    149e:	7b 01       	movw	r14, r22
    14a0:	eb 01       	movw	r28, r22
    14a2:	a8 81       	ld	r26, Y
    14a4:	b9 81       	ldd	r27, Y+1	; 0x01
    14a6:	10 97       	sbiw	r26, 0x00	; 0
    14a8:	61 f1       	breq	.+88     	; 0x1502 <enqueueByBaseline+0x70>
    14aa:	fc 01       	movw	r30, r24
    14ac:	02 81       	ldd	r16, Z+2	; 0x02
    14ae:	13 81       	ldd	r17, Z+3	; 0x03
    14b0:	24 81       	ldd	r18, Z+4	; 0x04
    14b2:	35 81       	ldd	r19, Z+5	; 0x05
    14b4:	12 96       	adiw	r26, 0x02	; 2
    14b6:	4d 91       	ld	r20, X+
    14b8:	5d 91       	ld	r21, X+
    14ba:	6d 91       	ld	r22, X+
    14bc:	7c 91       	ld	r23, X
    14be:	15 97       	sbiw	r26, 0x05	; 5
    14c0:	04 17       	cp	r16, r20
    14c2:	15 07       	cpc	r17, r21
    14c4:	26 07       	cpc	r18, r22
    14c6:	37 07       	cpc	r19, r23
    14c8:	14 f4       	brge	.+4      	; 0x14ce <enqueueByBaseline+0x3c>
    14ca:	1b c0       	rjmp	.+54     	; 0x1502 <enqueueByBaseline+0x70>
    14cc:	df 01       	movw	r26, r30
    14ce:	ed 91       	ld	r30, X+
    14d0:	fc 91       	ld	r31, X
    14d2:	11 97       	sbiw	r26, 0x01	; 1
    14d4:	30 97       	sbiw	r30, 0x00	; 0
    14d6:	49 f0       	breq	.+18     	; 0x14ea <enqueueByBaseline+0x58>
    14d8:	42 81       	ldd	r20, Z+2	; 0x02
    14da:	53 81       	ldd	r21, Z+3	; 0x03
    14dc:	64 81       	ldd	r22, Z+4	; 0x04
    14de:	75 81       	ldd	r23, Z+5	; 0x05
    14e0:	04 17       	cp	r16, r20
    14e2:	15 07       	cpc	r17, r21
    14e4:	26 07       	cpc	r18, r22
    14e6:	37 07       	cpc	r19, r23
    14e8:	8c f7       	brge	.-30     	; 0x14cc <enqueueByBaseline+0x3a>
    14ea:	ec 01       	movw	r28, r24
    14ec:	f9 83       	std	Y+1, r31	; 0x01
    14ee:	e8 83       	st	Y, r30
    14f0:	10 97       	sbiw	r26, 0x00	; 0
    14f2:	21 f4       	brne	.+8      	; 0x14fc <enqueueByBaseline+0x6a>
    14f4:	f7 01       	movw	r30, r14
    14f6:	91 83       	std	Z+1, r25	; 0x01
    14f8:	80 83       	st	Z, r24
    14fa:	07 c0       	rjmp	.+14     	; 0x150a <enqueueByBaseline+0x78>
    14fc:	8d 93       	st	X+, r24
    14fe:	9c 93       	st	X, r25
    1500:	04 c0       	rjmp	.+8      	; 0x150a <enqueueByBaseline+0x78>
    1502:	ec 01       	movw	r28, r24
    1504:	b9 83       	std	Y+1, r27	; 0x01
    1506:	a8 83       	st	Y, r26
    1508:	f5 cf       	rjmp	.-22     	; 0x14f4 <enqueueByBaseline+0x62>
    150a:	df 91       	pop	r29
    150c:	cf 91       	pop	r28
    150e:	1f 91       	pop	r17
    1510:	0f 91       	pop	r16
    1512:	ff 90       	pop	r15
    1514:	ef 90       	pop	r14
    1516:	08 95       	ret

00001518 <dequeue>:
    1518:	cf 93       	push	r28
    151a:	df 93       	push	r29
    151c:	00 d0       	rcall	.+0      	; 0x151e <dequeue+0x6>
    151e:	cd b7       	in	r28, 0x3d	; 61
    1520:	de b7       	in	r29, 0x3e	; 62
    1522:	fc 01       	movw	r30, r24
    1524:	20 81       	ld	r18, Z
    1526:	31 81       	ldd	r19, Z+1	; 0x01
    1528:	3a 83       	std	Y+2, r19	; 0x02
    152a:	29 83       	std	Y+1, r18	; 0x01
    152c:	29 81       	ldd	r18, Y+1	; 0x01
    152e:	3a 81       	ldd	r19, Y+2	; 0x02
    1530:	23 2b       	or	r18, r19
    1532:	51 f0       	breq	.+20     	; 0x1548 <dequeue+0x30>
    1534:	e9 81       	ldd	r30, Y+1	; 0x01
    1536:	fa 81       	ldd	r31, Y+2	; 0x02
    1538:	20 81       	ld	r18, Z
    153a:	31 81       	ldd	r19, Z+1	; 0x01
    153c:	fc 01       	movw	r30, r24
    153e:	31 83       	std	Z+1, r19	; 0x01
    1540:	20 83       	st	Z, r18
    1542:	89 81       	ldd	r24, Y+1	; 0x01
    1544:	9a 81       	ldd	r25, Y+2	; 0x02
    1546:	0b c0       	rjmp	.+22     	; 0x155e <dequeue+0x46>
    1548:	8f ef       	ldi	r24, 0xFF	; 255
    154a:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
    154e:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
    1552:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
    1556:	81 e0       	ldi	r24, 0x01	; 1
    1558:	83 bf       	out	0x33, r24	; 51
    155a:	88 95       	sleep
    155c:	fd cf       	rjmp	.-6      	; 0x1558 <dequeue+0x40>
    155e:	0f 90       	pop	r0
    1560:	0f 90       	pop	r0
    1562:	df 91       	pop	r29
    1564:	cf 91       	pop	r28
    1566:	08 95       	ret

00001568 <__vector_9>:
    1568:	1f 92       	push	r1
    156a:	0f 92       	push	r0
    156c:	0f b6       	in	r0, 0x3f	; 63
    156e:	0f 92       	push	r0
    1570:	11 24       	eor	r1, r1
    1572:	2f 93       	push	r18
    1574:	3f 93       	push	r19
    1576:	4f 93       	push	r20
    1578:	5f 93       	push	r21
    157a:	6f 93       	push	r22
    157c:	7f 93       	push	r23
    157e:	8f 93       	push	r24
    1580:	9f 93       	push	r25
    1582:	ef 93       	push	r30
    1584:	ff 93       	push	r31
    1586:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
    158a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
    158e:	01 96       	adiw	r24, 0x01	; 1
    1590:	90 93 2f 01 	sts	0x012F, r25	; 0x80012f <__data_end+0x1>
    1594:	80 93 2e 01 	sts	0x012E, r24	; 0x80012e <__data_end>
    1598:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <timerQ>
    159c:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <timerQ+0x1>
    15a0:	30 97       	sbiw	r30, 0x00	; 0
    15a2:	01 f1       	breq	.+64     	; 0x15e4 <__vector_9+0x7c>
    15a4:	42 81       	ldd	r20, Z+2	; 0x02
    15a6:	53 81       	ldd	r21, Z+3	; 0x03
    15a8:	64 81       	ldd	r22, Z+4	; 0x04
    15aa:	75 81       	ldd	r23, Z+5	; 0x05
    15ac:	86 17       	cp	r24, r22
    15ae:	97 07       	cpc	r25, r23
    15b0:	c9 f4       	brne	.+50     	; 0x15e4 <__vector_9+0x7c>
    15b2:	ca 01       	movw	r24, r20
    15b4:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15b8:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15bc:	42 1b       	sub	r20, r18
    15be:	53 0b       	sbc	r21, r19
    15c0:	41 30       	cpi	r20, 0x01	; 1
    15c2:	51 05       	cpc	r21, r1
    15c4:	29 f4       	brne	.+10     	; 0x15d0 <__vector_9+0x68>
    15c6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15ca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ce:	01 96       	adiw	r24, 0x01	; 1
    15d0:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    15d4:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    15d8:	ef e6       	ldi	r30, 0x6F	; 111
    15da:	f0 e0       	ldi	r31, 0x00	; 0
    15dc:	80 81       	ld	r24, Z
    15de:	82 60       	ori	r24, 0x02	; 2
    15e0:	80 83       	st	Z, r24
    15e2:	05 c0       	rjmp	.+10     	; 0x15ee <__vector_9+0x86>
    15e4:	ef e6       	ldi	r30, 0x6F	; 111
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	80 81       	ld	r24, Z
    15ea:	8d 7f       	andi	r24, 0xFD	; 253
    15ec:	80 83       	st	Z, r24
    15ee:	ff 91       	pop	r31
    15f0:	ef 91       	pop	r30
    15f2:	9f 91       	pop	r25
    15f4:	8f 91       	pop	r24
    15f6:	7f 91       	pop	r23
    15f8:	6f 91       	pop	r22
    15fa:	5f 91       	pop	r21
    15fc:	4f 91       	pop	r20
    15fe:	3f 91       	pop	r19
    1600:	2f 91       	pop	r18
    1602:	0f 90       	pop	r0
    1604:	0f be       	out	0x3f, r0	; 63
    1606:	0f 90       	pop	r0
    1608:	1f 90       	pop	r1
    160a:	18 95       	reti

0000160c <__vector_7>:
    160c:	1f 92       	push	r1
    160e:	0f 92       	push	r0
    1610:	0f b6       	in	r0, 0x3f	; 63
    1612:	0f 92       	push	r0
    1614:	11 24       	eor	r1, r1
    1616:	cf 92       	push	r12
    1618:	df 92       	push	r13
    161a:	ef 92       	push	r14
    161c:	ff 92       	push	r15
    161e:	2f 93       	push	r18
    1620:	3f 93       	push	r19
    1622:	4f 93       	push	r20
    1624:	5f 93       	push	r21
    1626:	6f 93       	push	r22
    1628:	7f 93       	push	r23
    162a:	8f 93       	push	r24
    162c:	9f 93       	push	r25
    162e:	af 93       	push	r26
    1630:	bf 93       	push	r27
    1632:	ef 93       	push	r30
    1634:	ff 93       	push	r31
    1636:	c0 90 2e 01 	lds	r12, 0x012E	; 0x80012e <__data_end>
    163a:	d0 90 2f 01 	lds	r13, 0x012F	; 0x80012f <__data_end+0x1>
    163e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1642:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1646:	b0 99       	sbic	0x16, 0	; 22
    1648:	0f c0       	rjmp	.+30     	; 0x1668 <__vector_7+0x5c>
    164a:	0d 2c       	mov	r0, r13
    164c:	00 0c       	add	r0, r0
    164e:	ee 08       	sbc	r14, r14
    1650:	ff 08       	sbc	r15, r15
    1652:	d6 01       	movw	r26, r12
    1654:	99 27       	eor	r25, r25
    1656:	88 27       	eor	r24, r24
    1658:	69 01       	movw	r12, r18
    165a:	e1 2c       	mov	r14, r1
    165c:	f1 2c       	mov	r15, r1
    165e:	c8 2a       	or	r12, r24
    1660:	d9 2a       	or	r13, r25
    1662:	ea 2a       	or	r14, r26
    1664:	fb 2a       	or	r15, r27
    1666:	15 c0       	rjmp	.+42     	; 0x1692 <__vector_7+0x86>
    1668:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    166c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1670:	8f ef       	ldi	r24, 0xFF	; 255
    1672:	c8 1a       	sub	r12, r24
    1674:	d8 0a       	sbc	r13, r24
    1676:	0d 2c       	mov	r0, r13
    1678:	00 0c       	add	r0, r0
    167a:	ee 08       	sbc	r14, r14
    167c:	ff 08       	sbc	r15, r15
    167e:	d6 01       	movw	r26, r12
    1680:	99 27       	eor	r25, r25
    1682:	88 27       	eor	r24, r24
    1684:	69 01       	movw	r12, r18
    1686:	e1 2c       	mov	r14, r1
    1688:	f1 2c       	mov	r15, r1
    168a:	c8 2a       	or	r12, r24
    168c:	d9 2a       	or	r13, r25
    168e:	ea 2a       	or	r14, r26
    1690:	fb 2a       	or	r15, r27
    1692:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <timerQ>
    1696:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <timerQ+0x1>
    169a:	30 97       	sbiw	r30, 0x00	; 0
    169c:	09 f4       	brne	.+2      	; 0x16a0 <__vector_7+0x94>
    169e:	42 c0       	rjmp	.+132    	; 0x1724 <__vector_7+0x118>
    16a0:	82 81       	ldd	r24, Z+2	; 0x02
    16a2:	93 81       	ldd	r25, Z+3	; 0x03
    16a4:	a4 81       	ldd	r26, Z+4	; 0x04
    16a6:	b5 81       	ldd	r27, Z+5	; 0x05
    16a8:	8c 19       	sub	r24, r12
    16aa:	9d 09       	sbc	r25, r13
    16ac:	ae 09       	sbc	r26, r14
    16ae:	bf 09       	sbc	r27, r15
    16b0:	18 16       	cp	r1, r24
    16b2:	19 06       	cpc	r1, r25
    16b4:	1a 06       	cpc	r1, r26
    16b6:	1b 06       	cpc	r1, r27
    16b8:	ec f1       	brlt	.+122    	; 0x1734 <__vector_7+0x128>
    16ba:	84 e3       	ldi	r24, 0x34	; 52
    16bc:	91 e0       	ldi	r25, 0x01	; 1
    16be:	0e 94 8c 0a 	call	0x1518	; 0x1518 <dequeue>
    16c2:	66 e3       	ldi	r22, 0x36	; 54
    16c4:	71 e0       	ldi	r23, 0x01	; 1
    16c6:	0e 94 06 0a 	call	0x140c	; 0x140c <enqueueByDeadline>
    16ca:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <timerQ>
    16ce:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <timerQ+0x1>
    16d2:	30 97       	sbiw	r30, 0x00	; 0
    16d4:	39 f1       	breq	.+78     	; 0x1724 <__vector_7+0x118>
    16d6:	82 81       	ldd	r24, Z+2	; 0x02
    16d8:	93 81       	ldd	r25, Z+3	; 0x03
    16da:	a4 81       	ldd	r26, Z+4	; 0x04
    16dc:	b5 81       	ldd	r27, Z+5	; 0x05
    16de:	8c 19       	sub	r24, r12
    16e0:	9d 09       	sbc	r25, r13
    16e2:	ae 09       	sbc	r26, r14
    16e4:	bf 09       	sbc	r27, r15
    16e6:	18 16       	cp	r1, r24
    16e8:	19 06       	cpc	r1, r25
    16ea:	1a 06       	cpc	r1, r26
    16ec:	1b 06       	cpc	r1, r27
    16ee:	2c f7       	brge	.-54     	; 0x16ba <__vector_7+0xae>
    16f0:	21 c0       	rjmp	.+66     	; 0x1734 <__vector_7+0x128>
    16f2:	9c 01       	movw	r18, r24
    16f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16fc:	84 1b       	sub	r24, r20
    16fe:	95 0b       	sbc	r25, r21
    1700:	01 97       	sbiw	r24, 0x01	; 1
    1702:	31 f4       	brne	.+12     	; 0x1710 <__vector_7+0x104>
    1704:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1708:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    170c:	2f 5f       	subi	r18, 0xFF	; 255
    170e:	3f 4f       	sbci	r19, 0xFF	; 255
    1710:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1714:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1718:	ef e6       	ldi	r30, 0x6F	; 111
    171a:	f0 e0       	ldi	r31, 0x00	; 0
    171c:	80 81       	ld	r24, Z
    171e:	82 60       	ori	r24, 0x02	; 2
    1720:	80 83       	st	Z, r24
    1722:	05 c0       	rjmp	.+10     	; 0x172e <__vector_7+0x122>
    1724:	ef e6       	ldi	r30, 0x6F	; 111
    1726:	f0 e0       	ldi	r31, 0x00	; 0
    1728:	80 81       	ld	r24, Z
    172a:	8d 7f       	andi	r24, 0xFD	; 253
    172c:	80 83       	st	Z, r24
    172e:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    1732:	0c c0       	rjmp	.+24     	; 0x174c <__vector_7+0x140>
    1734:	82 81       	ldd	r24, Z+2	; 0x02
    1736:	93 81       	ldd	r25, Z+3	; 0x03
    1738:	a4 81       	ldd	r26, Z+4	; 0x04
    173a:	b5 81       	ldd	r27, Z+5	; 0x05
    173c:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
    1740:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
    1744:	2a 17       	cp	r18, r26
    1746:	3b 07       	cpc	r19, r27
    1748:	69 f7       	brne	.-38     	; 0x1724 <__vector_7+0x118>
    174a:	d3 cf       	rjmp	.-90     	; 0x16f2 <__vector_7+0xe6>
    174c:	ff 91       	pop	r31
    174e:	ef 91       	pop	r30
    1750:	bf 91       	pop	r27
    1752:	af 91       	pop	r26
    1754:	9f 91       	pop	r25
    1756:	8f 91       	pop	r24
    1758:	7f 91       	pop	r23
    175a:	6f 91       	pop	r22
    175c:	5f 91       	pop	r21
    175e:	4f 91       	pop	r20
    1760:	3f 91       	pop	r19
    1762:	2f 91       	pop	r18
    1764:	ff 90       	pop	r15
    1766:	ef 90       	pop	r14
    1768:	df 90       	pop	r13
    176a:	cf 90       	pop	r12
    176c:	0f 90       	pop	r0
    176e:	0f be       	out	0x3f, r0	; 63
    1770:	0f 90       	pop	r0
    1772:	1f 90       	pop	r1
    1774:	18 95       	reti

00001776 <async>:
    1776:	3f 92       	push	r3
    1778:	4f 92       	push	r4
    177a:	5f 92       	push	r5
    177c:	6f 92       	push	r6
    177e:	7f 92       	push	r7
    1780:	8f 92       	push	r8
    1782:	9f 92       	push	r9
    1784:	af 92       	push	r10
    1786:	bf 92       	push	r11
    1788:	cf 92       	push	r12
    178a:	df 92       	push	r13
    178c:	ef 92       	push	r14
    178e:	ff 92       	push	r15
    1790:	0f 93       	push	r16
    1792:	1f 93       	push	r17
    1794:	cf 93       	push	r28
    1796:	df 93       	push	r29
    1798:	2b 01       	movw	r4, r22
    179a:	3c 01       	movw	r6, r24
    179c:	49 01       	movw	r8, r18
    179e:	5a 01       	movw	r10, r20
    17a0:	8f b7       	in	r24, 0x3f	; 63
    17a2:	80 78       	andi	r24, 0x80	; 128
    17a4:	38 2e       	mov	r3, r24
    17a6:	f8 94       	cli
    17a8:	8c e1       	ldi	r24, 0x1C	; 28
    17aa:	91 e0       	ldi	r25, 0x01	; 1
    17ac:	0e 94 8c 0a 	call	0x1518	; 0x1518 <dequeue>
    17b0:	ec 01       	movw	r28, r24
    17b2:	1b 87       	std	Y+11, r17	; 0x0b
    17b4:	0a 87       	std	Y+10, r16	; 0x0a
    17b6:	fd 86       	std	Y+13, r15	; 0x0d
    17b8:	ec 86       	std	Y+12, r14	; 0x0c
    17ba:	df 86       	std	Y+15, r13	; 0x0f
    17bc:	ce 86       	std	Y+14, r12	; 0x0e
    17be:	33 20       	and	r3, r3
    17c0:	61 f0       	breq	.+24     	; 0x17da <async+0x64>
    17c2:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <current>
    17c6:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <current+0x1>
    17ca:	02 80       	ldd	r0, Z+2	; 0x02
    17cc:	f3 81       	ldd	r31, Z+3	; 0x03
    17ce:	e0 2d       	mov	r30, r0
    17d0:	82 81       	ldd	r24, Z+2	; 0x02
    17d2:	93 81       	ldd	r25, Z+3	; 0x03
    17d4:	a4 81       	ldd	r26, Z+4	; 0x04
    17d6:	b5 81       	ldd	r27, Z+5	; 0x05
    17d8:	08 c0       	rjmp	.+16     	; 0x17ea <async+0x74>
    17da:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <timestamp>
    17de:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <timestamp+0x1>
    17e2:	a0 91 32 01 	lds	r26, 0x0132	; 0x800132 <timestamp+0x2>
    17e6:	b0 91 33 01 	lds	r27, 0x0133	; 0x800133 <timestamp+0x3>
    17ea:	48 0e       	add	r4, r24
    17ec:	59 1e       	adc	r5, r25
    17ee:	6a 1e       	adc	r6, r26
    17f0:	7b 1e       	adc	r7, r27
    17f2:	4a 82       	std	Y+2, r4	; 0x02
    17f4:	5b 82       	std	Y+3, r5	; 0x03
    17f6:	6c 82       	std	Y+4, r6	; 0x04
    17f8:	7d 82       	std	Y+5, r7	; 0x05
    17fa:	18 14       	cp	r1, r8
    17fc:	19 04       	cpc	r1, r9
    17fe:	1a 04       	cpc	r1, r10
    1800:	1b 04       	cpc	r1, r11
    1802:	44 f0       	brlt	.+16     	; 0x1814 <async+0x9e>
    1804:	0f 2e       	mov	r0, r31
    1806:	88 24       	eor	r8, r8
    1808:	8a 94       	dec	r8
    180a:	98 2c       	mov	r9, r8
    180c:	a8 2c       	mov	r10, r8
    180e:	ff e7       	ldi	r31, 0x7F	; 127
    1810:	bf 2e       	mov	r11, r31
    1812:	f0 2d       	mov	r31, r0
    1814:	84 0c       	add	r8, r4
    1816:	95 1c       	adc	r9, r5
    1818:	a6 1c       	adc	r10, r6
    181a:	b7 1c       	adc	r11, r7
    181c:	8e 82       	std	Y+6, r8	; 0x06
    181e:	9f 82       	std	Y+7, r9	; 0x07
    1820:	a8 86       	std	Y+8, r10	; 0x08
    1822:	b9 86       	std	Y+9, r11	; 0x09
    1824:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <__data_end>
    1828:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <__data_end+0x1>
    182c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1830:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1834:	b0 99       	sbic	0x16, 0	; 22
    1836:	0e c0       	rjmp	.+28     	; 0x1854 <async+0xde>
    1838:	09 2e       	mov	r0, r25
    183a:	00 0c       	add	r0, r0
    183c:	aa 0b       	sbc	r26, r26
    183e:	bb 0b       	sbc	r27, r27
    1840:	dc 01       	movw	r26, r24
    1842:	99 27       	eor	r25, r25
    1844:	88 27       	eor	r24, r24
    1846:	60 e0       	ldi	r22, 0x00	; 0
    1848:	70 e0       	ldi	r23, 0x00	; 0
    184a:	84 2b       	or	r24, r20
    184c:	95 2b       	or	r25, r21
    184e:	a6 2b       	or	r26, r22
    1850:	b7 2b       	or	r27, r23
    1852:	13 c0       	rjmp	.+38     	; 0x187a <async+0x104>
    1854:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1858:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    185c:	01 96       	adiw	r24, 0x01	; 1
    185e:	09 2e       	mov	r0, r25
    1860:	00 0c       	add	r0, r0
    1862:	aa 0b       	sbc	r26, r26
    1864:	bb 0b       	sbc	r27, r27
    1866:	dc 01       	movw	r26, r24
    1868:	99 27       	eor	r25, r25
    186a:	88 27       	eor	r24, r24
    186c:	a9 01       	movw	r20, r18
    186e:	60 e0       	ldi	r22, 0x00	; 0
    1870:	70 e0       	ldi	r23, 0x00	; 0
    1872:	84 2b       	or	r24, r20
    1874:	95 2b       	or	r25, r21
    1876:	a6 2b       	or	r26, r22
    1878:	b7 2b       	or	r27, r23
    187a:	48 1a       	sub	r4, r24
    187c:	59 0a       	sbc	r5, r25
    187e:	6a 0a       	sbc	r6, r26
    1880:	7b 0a       	sbc	r7, r27
    1882:	14 14       	cp	r1, r4
    1884:	15 04       	cpc	r1, r5
    1886:	16 04       	cpc	r1, r6
    1888:	17 04       	cpc	r1, r7
    188a:	ac f5       	brge	.+106    	; 0x18f6 <async+0x180>
    188c:	64 e3       	ldi	r22, 0x34	; 52
    188e:	71 e0       	ldi	r23, 0x01	; 1
    1890:	ce 01       	movw	r24, r28
    1892:	0e 94 49 0a 	call	0x1492	; 0x1492 <enqueueByBaseline>
    1896:	e0 91 34 01 	lds	r30, 0x0134	; 0x800134 <timerQ>
    189a:	f0 91 35 01 	lds	r31, 0x0135	; 0x800135 <timerQ+0x1>
    189e:	30 97       	sbiw	r30, 0x00	; 0
    18a0:	21 f1       	breq	.+72     	; 0x18ea <async+0x174>
    18a2:	82 81       	ldd	r24, Z+2	; 0x02
    18a4:	93 81       	ldd	r25, Z+3	; 0x03
    18a6:	a4 81       	ldd	r26, Z+4	; 0x04
    18a8:	b5 81       	ldd	r27, Z+5	; 0x05
    18aa:	20 91 2e 01 	lds	r18, 0x012E	; 0x80012e <__data_end>
    18ae:	30 91 2f 01 	lds	r19, 0x012F	; 0x80012f <__data_end+0x1>
    18b2:	2a 17       	cp	r18, r26
    18b4:	3b 07       	cpc	r19, r27
    18b6:	c9 f4       	brne	.+50     	; 0x18ea <async+0x174>
    18b8:	9c 01       	movw	r18, r24
    18ba:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18be:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18c2:	84 1b       	sub	r24, r20
    18c4:	95 0b       	sbc	r25, r21
    18c6:	01 97       	sbiw	r24, 0x01	; 1
    18c8:	31 f4       	brne	.+12     	; 0x18d6 <async+0x160>
    18ca:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    18ce:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    18d2:	2f 5f       	subi	r18, 0xFF	; 255
    18d4:	3f 4f       	sbci	r19, 0xFF	; 255
    18d6:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    18da:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    18de:	ef e6       	ldi	r30, 0x6F	; 111
    18e0:	f0 e0       	ldi	r31, 0x00	; 0
    18e2:	80 81       	ld	r24, Z
    18e4:	82 60       	ori	r24, 0x02	; 2
    18e6:	80 83       	st	Z, r24
    18e8:	41 c0       	rjmp	.+130    	; 0x196c <async+0x1f6>
    18ea:	ef e6       	ldi	r30, 0x6F	; 111
    18ec:	f0 e0       	ldi	r31, 0x00	; 0
    18ee:	80 81       	ld	r24, Z
    18f0:	8d 7f       	andi	r24, 0xFD	; 253
    18f2:	80 83       	st	Z, r24
    18f4:	3b c0       	rjmp	.+118    	; 0x196c <async+0x1f6>
    18f6:	66 e3       	ldi	r22, 0x36	; 54
    18f8:	71 e0       	ldi	r23, 0x01	; 1
    18fa:	ce 01       	movw	r24, r28
    18fc:	0e 94 06 0a 	call	0x140c	; 0x140c <enqueueByDeadline>
    1900:	33 20       	and	r3, r3
    1902:	b9 f1       	breq	.+110    	; 0x1972 <async+0x1fc>
    1904:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <threadPool>
    1908:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <threadPool+0x1>
    190c:	00 97       	sbiw	r24, 0x00	; 0
    190e:	81 f1       	breq	.+96     	; 0x1970 <async+0x1fa>
    1910:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <activeStack>
    1914:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <activeStack+0x1>
    1918:	20 91 36 01 	lds	r18, 0x0136	; 0x800136 <msgQ>
    191c:	30 91 37 01 	lds	r19, 0x0137	; 0x800137 <msgQ+0x1>
    1920:	02 81       	ldd	r16, Z+2	; 0x02
    1922:	13 81       	ldd	r17, Z+3	; 0x03
    1924:	d9 01       	movw	r26, r18
    1926:	16 96       	adiw	r26, 0x06	; 6
    1928:	4d 91       	ld	r20, X+
    192a:	5d 91       	ld	r21, X+
    192c:	6d 91       	ld	r22, X+
    192e:	7c 91       	ld	r23, X
    1930:	19 97       	sbiw	r26, 0x09	; 9
    1932:	d8 01       	movw	r26, r16
    1934:	16 96       	adiw	r26, 0x06	; 6
    1936:	0d 91       	ld	r16, X+
    1938:	1d 91       	ld	r17, X+
    193a:	2d 91       	ld	r18, X+
    193c:	3c 91       	ld	r19, X
    193e:	19 97       	sbiw	r26, 0x09	; 9
    1940:	40 1b       	sub	r20, r16
    1942:	51 0b       	sbc	r21, r17
    1944:	62 0b       	sbc	r22, r18
    1946:	73 0b       	sbc	r23, r19
    1948:	9a f4       	brpl	.+38     	; 0x1970 <async+0x1fa>
    194a:	dc 01       	movw	r26, r24
    194c:	2d 91       	ld	r18, X+
    194e:	3c 91       	ld	r19, X
    1950:	11 97       	sbiw	r26, 0x01	; 1
    1952:	30 93 1b 01 	sts	0x011B, r19	; 0x80011b <threadPool+0x1>
    1956:	20 93 1a 01 	sts	0x011A, r18	; 0x80011a <threadPool>
    195a:	ed 93       	st	X+, r30
    195c:	fc 93       	st	X, r31
    195e:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <activeStack+0x1>
    1962:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <activeStack>
    1966:	0e 94 13 02 	call	0x426	; 0x426 <dispatch>
    196a:	02 c0       	rjmp	.+4      	; 0x1970 <async+0x1fa>
    196c:	33 20       	and	r3, r3
    196e:	09 f0       	breq	.+2      	; 0x1972 <async+0x1fc>
    1970:	78 94       	sei
    1972:	ce 01       	movw	r24, r28
    1974:	df 91       	pop	r29
    1976:	cf 91       	pop	r28
    1978:	1f 91       	pop	r17
    197a:	0f 91       	pop	r16
    197c:	ff 90       	pop	r15
    197e:	ef 90       	pop	r14
    1980:	df 90       	pop	r13
    1982:	cf 90       	pop	r12
    1984:	bf 90       	pop	r11
    1986:	af 90       	pop	r10
    1988:	9f 90       	pop	r9
    198a:	8f 90       	pop	r8
    198c:	7f 90       	pop	r7
    198e:	6f 90       	pop	r6
    1990:	5f 90       	pop	r5
    1992:	4f 90       	pop	r4
    1994:	3f 90       	pop	r3
    1996:	08 95       	ret

00001998 <sync>:
    1998:	cf 92       	push	r12
    199a:	df 92       	push	r13
    199c:	ef 92       	push	r14
    199e:	ff 92       	push	r15
    19a0:	0f 93       	push	r16
    19a2:	1f 93       	push	r17
    19a4:	cf 93       	push	r28
    19a6:	df 93       	push	r29
    19a8:	ec 01       	movw	r28, r24
    19aa:	7b 01       	movw	r14, r22
    19ac:	6a 01       	movw	r12, r20
    19ae:	1f b7       	in	r17, 0x3f	; 63
    19b0:	10 78       	andi	r17, 0x80	; 128
    19b2:	f8 94       	cli
    19b4:	a8 81       	ld	r26, Y
    19b6:	b9 81       	ldd	r27, Y+1	; 0x01
    19b8:	10 97       	sbiw	r26, 0x00	; 0
    19ba:	61 f1       	breq	.+88     	; 0x1a14 <sync+0x7c>
    19bc:	14 96       	adiw	r26, 0x04	; 4
    19be:	ed 91       	ld	r30, X+
    19c0:	fc 91       	ld	r31, X
    19c2:	15 97       	sbiw	r26, 0x05	; 5
    19c4:	30 97       	sbiw	r30, 0x00	; 0
    19c6:	41 f0       	breq	.+16     	; 0x19d8 <sync+0x40>
    19c8:	a0 81       	ld	r26, Z
    19ca:	b1 81       	ldd	r27, Z+1	; 0x01
    19cc:	14 96       	adiw	r26, 0x04	; 4
    19ce:	ed 91       	ld	r30, X+
    19d0:	fc 91       	ld	r31, X
    19d2:	15 97       	sbiw	r26, 0x05	; 5
    19d4:	30 97       	sbiw	r30, 0x00	; 0
    19d6:	c1 f7       	brne	.-16     	; 0x19c8 <sync+0x30>
    19d8:	20 91 16 01 	lds	r18, 0x0116	; 0x800116 <current>
    19dc:	30 91 17 01 	lds	r19, 0x0117	; 0x800117 <current+0x1>
    19e0:	2a 17       	cp	r18, r26
    19e2:	3b 07       	cpc	r19, r27
    19e4:	21 f0       	breq	.+8      	; 0x19ee <sync+0x56>
    19e6:	11 23       	and	r17, r17
    19e8:	09 f4       	brne	.+2      	; 0x19ec <sync+0x54>
    19ea:	3d c0       	rjmp	.+122    	; 0x1a66 <sync+0xce>
    19ec:	07 c0       	rjmp	.+14     	; 0x19fc <sync+0x64>
    19ee:	11 23       	and	r17, r17
    19f0:	09 f4       	brne	.+2      	; 0x19f4 <sync+0x5c>
    19f2:	3c c0       	rjmp	.+120    	; 0x1a6c <sync+0xd4>
    19f4:	78 94       	sei
    19f6:	8f ef       	ldi	r24, 0xFF	; 255
    19f8:	9f ef       	ldi	r25, 0xFF	; 255
    19fa:	52 c0       	rjmp	.+164    	; 0x1aa0 <sync+0x108>
    19fc:	8a 81       	ldd	r24, Y+2	; 0x02
    19fe:	9b 81       	ldd	r25, Y+3	; 0x03
    1a00:	00 97       	sbiw	r24, 0x00	; 0
    1a02:	d1 f1       	breq	.+116    	; 0x1a78 <sync+0xe0>
    1a04:	fc 01       	movw	r30, r24
    1a06:	15 82       	std	Z+5, r1	; 0x05
    1a08:	14 82       	std	Z+4, r1	; 0x04
    1a0a:	36 c0       	rjmp	.+108    	; 0x1a78 <sync+0xe0>
    1a0c:	78 94       	sei
    1a0e:	80 e0       	ldi	r24, 0x00	; 0
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	46 c0       	rjmp	.+140    	; 0x1aa0 <sync+0x108>
    1a14:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <current>
    1a18:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <current+0x1>
    1a1c:	99 83       	std	Y+1, r25	; 0x01
    1a1e:	88 83       	st	Y, r24
    1a20:	11 23       	and	r17, r17
    1a22:	29 f0       	breq	.+10     	; 0x1a2e <sync+0x96>
    1a24:	8a 81       	ldd	r24, Y+2	; 0x02
    1a26:	9b 81       	ldd	r25, Y+3	; 0x03
    1a28:	01 97       	sbiw	r24, 0x01	; 1
    1a2a:	09 f0       	breq	.+2      	; 0x1a2e <sync+0x96>
    1a2c:	78 94       	sei
    1a2e:	b6 01       	movw	r22, r12
    1a30:	ce 01       	movw	r24, r28
    1a32:	f7 01       	movw	r30, r14
    1a34:	09 95       	icall
    1a36:	f8 2e       	mov	r15, r24
    1a38:	09 2f       	mov	r16, r25
    1a3a:	8f b7       	in	r24, 0x3f	; 63
    1a3c:	f8 94       	cli
    1a3e:	19 82       	std	Y+1, r1	; 0x01
    1a40:	18 82       	st	Y, r1
    1a42:	8a 81       	ldd	r24, Y+2	; 0x02
    1a44:	9b 81       	ldd	r25, Y+3	; 0x03
    1a46:	82 30       	cpi	r24, 0x02	; 2
    1a48:	91 05       	cpc	r25, r1
    1a4a:	38 f0       	brcs	.+14     	; 0x1a5a <sync+0xc2>
    1a4c:	1b 82       	std	Y+3, r1	; 0x03
    1a4e:	1a 82       	std	Y+2, r1	; 0x02
    1a50:	fc 01       	movw	r30, r24
    1a52:	15 82       	std	Z+5, r1	; 0x05
    1a54:	14 82       	std	Z+4, r1	; 0x04
    1a56:	0e 94 13 02 	call	0x426	; 0x426 <dispatch>
    1a5a:	11 23       	and	r17, r17
    1a5c:	51 f0       	breq	.+20     	; 0x1a72 <sync+0xda>
    1a5e:	78 94       	sei
    1a60:	8f 2d       	mov	r24, r15
    1a62:	90 2f       	mov	r25, r16
    1a64:	1d c0       	rjmp	.+58     	; 0x1aa0 <sync+0x108>
    1a66:	8f ef       	ldi	r24, 0xFF	; 255
    1a68:	9f ef       	ldi	r25, 0xFF	; 255
    1a6a:	1a c0       	rjmp	.+52     	; 0x1aa0 <sync+0x108>
    1a6c:	8f ef       	ldi	r24, 0xFF	; 255
    1a6e:	9f ef       	ldi	r25, 0xFF	; 255
    1a70:	17 c0       	rjmp	.+46     	; 0x1aa0 <sync+0x108>
    1a72:	8f 2d       	mov	r24, r15
    1a74:	90 2f       	mov	r25, r16
    1a76:	14 c0       	rjmp	.+40     	; 0x1aa0 <sync+0x108>
    1a78:	3b 83       	std	Y+3, r19	; 0x03
    1a7a:	2a 83       	std	Y+2, r18	; 0x02
    1a7c:	f9 01       	movw	r30, r18
    1a7e:	d5 83       	std	Z+5, r29	; 0x05
    1a80:	c4 83       	std	Z+4, r28	; 0x04
    1a82:	cd 01       	movw	r24, r26
    1a84:	0e 94 13 02 	call	0x426	; 0x426 <dispatch>
    1a88:	e0 91 16 01 	lds	r30, 0x0116	; 0x800116 <current>
    1a8c:	f0 91 17 01 	lds	r31, 0x0117	; 0x800117 <current+0x1>
    1a90:	82 81       	ldd	r24, Z+2	; 0x02
    1a92:	93 81       	ldd	r25, Z+3	; 0x03
    1a94:	89 2b       	or	r24, r25
    1a96:	09 f4       	brne	.+2      	; 0x1a9a <sync+0x102>
    1a98:	b9 cf       	rjmp	.-142    	; 0x1a0c <sync+0x74>
    1a9a:	f9 83       	std	Y+1, r31	; 0x01
    1a9c:	e8 83       	st	Y, r30
    1a9e:	c2 cf       	rjmp	.-124    	; 0x1a24 <sync+0x8c>
    1aa0:	df 91       	pop	r29
    1aa2:	cf 91       	pop	r28
    1aa4:	1f 91       	pop	r17
    1aa6:	0f 91       	pop	r16
    1aa8:	ff 90       	pop	r15
    1aaa:	ef 90       	pop	r14
    1aac:	df 90       	pop	r13
    1aae:	cf 90       	pop	r12
    1ab0:	08 95       	ret

00001ab2 <run>:
    1ab2:	00 91 16 01 	lds	r16, 0x0116	; 0x800116 <current>
    1ab6:	10 91 17 01 	lds	r17, 0x0117	; 0x800117 <current+0x1>
    1aba:	86 e3       	ldi	r24, 0x36	; 54
    1abc:	91 e0       	ldi	r25, 0x01	; 1
    1abe:	0e 94 8c 0a 	call	0x1518	; 0x1518 <dequeue>
    1ac2:	ec 01       	movw	r28, r24
    1ac4:	d8 01       	movw	r26, r16
    1ac6:	13 96       	adiw	r26, 0x03	; 3
    1ac8:	9c 93       	st	X, r25
    1aca:	8e 93       	st	-X, r24
    1acc:	12 97       	sbiw	r26, 0x02	; 2
    1ace:	78 94       	sei
    1ad0:	4e 85       	ldd	r20, Y+14	; 0x0e
    1ad2:	5f 85       	ldd	r21, Y+15	; 0x0f
    1ad4:	6c 85       	ldd	r22, Y+12	; 0x0c
    1ad6:	7d 85       	ldd	r23, Y+13	; 0x0d
    1ad8:	8a 85       	ldd	r24, Y+10	; 0x0a
    1ada:	9b 85       	ldd	r25, Y+11	; 0x0b
    1adc:	0e 94 cc 0c 	call	0x1998	; 0x1998 <sync>
    1ae0:	8f b7       	in	r24, 0x3f	; 63
    1ae2:	f8 94       	cli
    1ae4:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <msgPool>
    1ae8:	90 91 1d 01 	lds	r25, 0x011D	; 0x80011d <msgPool+0x1>
    1aec:	99 83       	std	Y+1, r25	; 0x01
    1aee:	88 83       	st	Y, r24
    1af0:	d0 93 1d 01 	sts	0x011D, r29	; 0x80011d <msgPool+0x1>
    1af4:	c0 93 1c 01 	sts	0x011C, r28	; 0x80011c <msgPool>
    1af8:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <activeStack>
    1afc:	f0 91 19 01 	lds	r31, 0x0119	; 0x800119 <activeStack+0x1>
    1b00:	00 81       	ld	r16, Z
    1b02:	11 81       	ldd	r17, Z+1	; 0x01
    1b04:	e8 01       	movw	r28, r16
    1b06:	2a 81       	ldd	r18, Y+2	; 0x02
    1b08:	3b 81       	ldd	r19, Y+3	; 0x03
    1b0a:	a0 91 36 01 	lds	r26, 0x0136	; 0x800136 <msgQ>
    1b0e:	b0 91 37 01 	lds	r27, 0x0137	; 0x800137 <msgQ+0x1>
    1b12:	10 97       	sbiw	r26, 0x00	; 0
    1b14:	c1 f0       	breq	.+48     	; 0x1b46 <run+0x94>
    1b16:	21 15       	cp	r18, r1
    1b18:	31 05       	cpc	r19, r1
    1b1a:	59 f2       	breq	.-106    	; 0x1ab2 <run>
    1b1c:	16 96       	adiw	r26, 0x06	; 6
    1b1e:	8d 91       	ld	r24, X+
    1b20:	9d 91       	ld	r25, X+
    1b22:	0d 90       	ld	r0, X+
    1b24:	bc 91       	ld	r27, X
    1b26:	a0 2d       	mov	r26, r0
    1b28:	e9 01       	movw	r28, r18
    1b2a:	4e 81       	ldd	r20, Y+6	; 0x06
    1b2c:	5f 81       	ldd	r21, Y+7	; 0x07
    1b2e:	68 85       	ldd	r22, Y+8	; 0x08
    1b30:	79 85       	ldd	r23, Y+9	; 0x09
    1b32:	84 1b       	sub	r24, r20
    1b34:	95 0b       	sbc	r25, r21
    1b36:	a6 0b       	sbc	r26, r22
    1b38:	b7 0b       	sbc	r27, r23
    1b3a:	18 16       	cp	r1, r24
    1b3c:	19 06       	cpc	r1, r25
    1b3e:	1a 06       	cpc	r1, r26
    1b40:	1b 06       	cpc	r1, r27
    1b42:	0c f0       	brlt	.+2      	; 0x1b46 <run+0x94>
    1b44:	b6 cf       	rjmp	.-148    	; 0x1ab2 <run>
    1b46:	10 93 19 01 	sts	0x0119, r17	; 0x800119 <activeStack+0x1>
    1b4a:	00 93 18 01 	sts	0x0118, r16	; 0x800118 <activeStack>
    1b4e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <threadPool>
    1b52:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <threadPool+0x1>
    1b56:	91 83       	std	Z+1, r25	; 0x01
    1b58:	80 83       	st	Z, r24
    1b5a:	f0 93 1b 01 	sts	0x011B, r31	; 0x80011b <threadPool+0x1>
    1b5e:	e0 93 1a 01 	sts	0x011A, r30	; 0x80011a <threadPool>
    1b62:	a0 91 18 01 	lds	r26, 0x0118	; 0x800118 <activeStack>
    1b66:	b0 91 19 01 	lds	r27, 0x0119	; 0x800119 <activeStack+0x1>
    1b6a:	14 96       	adiw	r26, 0x04	; 4
    1b6c:	ed 91       	ld	r30, X+
    1b6e:	fc 91       	ld	r31, X
    1b70:	15 97       	sbiw	r26, 0x05	; 5
    1b72:	30 97       	sbiw	r30, 0x00	; 0
    1b74:	41 f0       	breq	.+16     	; 0x1b86 <run+0xd4>
    1b76:	a0 81       	ld	r26, Z
    1b78:	b1 81       	ldd	r27, Z+1	; 0x01
    1b7a:	14 96       	adiw	r26, 0x04	; 4
    1b7c:	ed 91       	ld	r30, X+
    1b7e:	fc 91       	ld	r31, X
    1b80:	15 97       	sbiw	r26, 0x05	; 5
    1b82:	30 97       	sbiw	r30, 0x00	; 0
    1b84:	c1 f7       	brne	.-16     	; 0x1b76 <run+0xc4>
    1b86:	cd 01       	movw	r24, r26
    1b88:	0e 94 13 02 	call	0x426	; 0x426 <dispatch>
    1b8c:	92 cf       	rjmp	.-220    	; 0x1ab2 <run>

00001b8e <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1b8e:	8c 01       	movw	r16, r24
    1b90:	7b 01       	movw	r14, r22
    1b92:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1b94:	8f b7       	in	r24, 0x3f	; 63
    1b96:	f8 94       	cli
    initialize();
    1b98:	0e 94 a8 01 	call	0x350	; 0x350 <initialize>
    ENABLE(1);
    1b9c:	78 94       	sei
    if (m != NULL)
    1b9e:	e1 14       	cp	r14, r1
    1ba0:	f1 04       	cpc	r15, r1
    1ba2:	41 f0       	breq	.+16     	; 0x1bb4 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1ba4:	20 e0       	ldi	r18, 0x00	; 0
    1ba6:	30 e0       	ldi	r19, 0x00	; 0
    1ba8:	a9 01       	movw	r20, r18
    1baa:	60 e0       	ldi	r22, 0x00	; 0
    1bac:	70 e0       	ldi	r23, 0x00	; 0
    1bae:	cb 01       	movw	r24, r22
    1bb0:	0e 94 bb 0b 	call	0x1776	; 0x1776 <async>
    DISABLE(status);
    1bb4:	8f b7       	in	r24, 0x3f	; 63
    1bb6:	f8 94       	cli
        }
    }
}

static void idle(void) {
    schedule();
    1bb8:	0e 94 33 02 	call	0x466	; 0x466 <schedule>
    ENABLE(1);
    1bbc:	78 94       	sei
    while (1) {
        SLEEP();
    1bbe:	81 e0       	ldi	r24, 0x01	; 1
    1bc0:	83 bf       	out	0x33, r24	; 51
    1bc2:	88 95       	sleep
    1bc4:	fd cf       	rjmp	.-6      	; 0x1bc0 <tinytimber+0x32>

00001bc6 <initUtil>:

#include <avr/io.h>
#include "Utility.h"

void initUtil (Utility *self, unsigned int ubrr){
    CLKPR = 0x80;
    1bc6:	e1 e6       	ldi	r30, 0x61	; 97
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 e8       	ldi	r24, 0x80	; 128
    1bcc:	80 83       	st	Z, r24
	CLKPR = 0x00;
    1bce:	10 82       	st	Z, r1

	LCDCCR = (1 << LCDCC3) | (1 << LCDCC2) | (1 << LCDCC1) | (1 << LCDCC0);
    1bd0:	8f e0       	ldi	r24, 0x0F	; 15
    1bd2:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
	LCDCRB = (1 << LCDMUX1) | (1 << LCDMUX0) | (1 << LCDPM0) | (1 << LCDPM1) | (1 << LCDPM2) | (1 << LCDCS);
    1bd6:	87 eb       	ldi	r24, 0xB7	; 183
    1bd8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
	LCDFRR = (1 << LCDCD2) | (1 << LCDCD1) | (1 << LCDCD0);
    1bdc:	87 e0       	ldi	r24, 0x07	; 7
    1bde:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
	LCDCRA = (1 << LCDEN) | (1 << LCDAB);
    1be2:	90 ec       	ldi	r25, 0xC0	; 192
    1be4:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>

    PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
    1be8:	85 b1       	in	r24, 0x05	; 5
    1bea:	80 6d       	ori	r24, 0xD0	; 208
    1bec:	85 b9       	out	0x05, r24	; 5
    PORTE |= (1<<PE2)|(1<<PE3);
    1bee:	8e b1       	in	r24, 0x0e	; 14
    1bf0:	8c 60       	ori	r24, 0x0C	; 12
    1bf2:	8e b9       	out	0x0e, r24	; 14
	DDRB   = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
    1bf4:	8f e2       	ldi	r24, 0x2F	; 47
    1bf6:	84 b9       	out	0x04, r24	; 4
	DDRE   = (1<<DDE6)|(1<<DDE4);
    1bf8:	80 e5       	ldi	r24, 0x50	; 80
    1bfa:	8d b9       	out	0x0d, r24	; 13
   
	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
    1bfc:	8c e0       	ldi	r24, 0x0C	; 12
    1bfe:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
    1c02:	80 ed       	ldi	r24, 0xD0	; 208
    1c04:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
	EIMSK = (1 << PCIE1)|(1 << PCIE0);
    1c08:	9d bb       	out	0x1d, r25	; 29

    /* Set Baud Rate*/
    UBRR0H = (unsigned char)(ubrr>>8);
    1c0a:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (unsigned char)ubrr;
    1c0e:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	
	/* Enable receiver and transmitter */
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
    1c12:	88 e9       	ldi	r24, 0x98	; 152
    1c14:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
	
	/* Set frame format: 8data, 1stop bit */
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
    1c18:	86 e0       	ldi	r24, 0x06	; 6
    1c1a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
    1c1e:	08 95       	ret

00001c20 <setjmp>:
    1c20:	dc 01       	movw	r26, r24
    1c22:	2d 92       	st	X+, r2
    1c24:	3d 92       	st	X+, r3
    1c26:	4d 92       	st	X+, r4
    1c28:	5d 92       	st	X+, r5
    1c2a:	6d 92       	st	X+, r6
    1c2c:	7d 92       	st	X+, r7
    1c2e:	8d 92       	st	X+, r8
    1c30:	9d 92       	st	X+, r9
    1c32:	ad 92       	st	X+, r10
    1c34:	bd 92       	st	X+, r11
    1c36:	cd 92       	st	X+, r12
    1c38:	dd 92       	st	X+, r13
    1c3a:	ed 92       	st	X+, r14
    1c3c:	fd 92       	st	X+, r15
    1c3e:	0d 93       	st	X+, r16
    1c40:	1d 93       	st	X+, r17
    1c42:	cd 93       	st	X+, r28
    1c44:	dd 93       	st	X+, r29
    1c46:	ff 91       	pop	r31
    1c48:	ef 91       	pop	r30
    1c4a:	8d b7       	in	r24, 0x3d	; 61
    1c4c:	8d 93       	st	X+, r24
    1c4e:	8e b7       	in	r24, 0x3e	; 62
    1c50:	8d 93       	st	X+, r24
    1c52:	8f b7       	in	r24, 0x3f	; 63
    1c54:	8d 93       	st	X+, r24
    1c56:	ed 93       	st	X+, r30
    1c58:	fd 93       	st	X+, r31
    1c5a:	88 27       	eor	r24, r24
    1c5c:	99 27       	eor	r25, r25
    1c5e:	09 94       	ijmp

00001c60 <longjmp>:
    1c60:	dc 01       	movw	r26, r24
    1c62:	cb 01       	movw	r24, r22
    1c64:	81 30       	cpi	r24, 0x01	; 1
    1c66:	91 05       	cpc	r25, r1
    1c68:	81 1d       	adc	r24, r1
    1c6a:	2d 90       	ld	r2, X+
    1c6c:	3d 90       	ld	r3, X+
    1c6e:	4d 90       	ld	r4, X+
    1c70:	5d 90       	ld	r5, X+
    1c72:	6d 90       	ld	r6, X+
    1c74:	7d 90       	ld	r7, X+
    1c76:	8d 90       	ld	r8, X+
    1c78:	9d 90       	ld	r9, X+
    1c7a:	ad 90       	ld	r10, X+
    1c7c:	bd 90       	ld	r11, X+
    1c7e:	cd 90       	ld	r12, X+
    1c80:	dd 90       	ld	r13, X+
    1c82:	ed 90       	ld	r14, X+
    1c84:	fd 90       	ld	r15, X+
    1c86:	0d 91       	ld	r16, X+
    1c88:	1d 91       	ld	r17, X+
    1c8a:	cd 91       	ld	r28, X+
    1c8c:	dd 91       	ld	r29, X+
    1c8e:	ed 91       	ld	r30, X+
    1c90:	fd 91       	ld	r31, X+
    1c92:	0d 90       	ld	r0, X+
    1c94:	f8 94       	cli
    1c96:	fe bf       	out	0x3e, r31	; 62
    1c98:	0f be       	out	0x3f, r0	; 63
    1c9a:	ed bf       	out	0x3d, r30	; 61
    1c9c:	ed 91       	ld	r30, X+
    1c9e:	fd 91       	ld	r31, X+
    1ca0:	09 94       	ijmp

00001ca2 <_exit>:
    1ca2:	f8 94       	cli

00001ca4 <__stop_program>:
    1ca4:	ff cf       	rjmp	.-2      	; 0x1ca4 <__stop_program>
